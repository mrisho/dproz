{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/dproz-about-us/dproz-about-us.component.html","webpack:///./src/app/dproz-about-us/dproz-about-us.component.scss","webpack:///./src/app/dproz-about-us/dproz-about-us.component.ts","webpack:///./src/app/dproz-authentication/dproz-authentication.module.ts","webpack:///./src/app/dproz-authentication/login/login.component.html","webpack:///./src/app/dproz-authentication/login/login.component.scss","webpack:///./src/app/dproz-authentication/login/login.component.ts","webpack:///./src/app/dproz-authentication/password-reset/password-reset.component.html","webpack:///./src/app/dproz-authentication/password-reset/password-reset.component.scss","webpack:///./src/app/dproz-authentication/password-reset/password-reset.component.ts","webpack:///./src/app/dproz-authentication/signup/signup.component.html","webpack:///./src/app/dproz-authentication/signup/signup.component.scss","webpack:///./src/app/dproz-authentication/signup/signup.component.ts","webpack:///./src/app/dproz-authentication/verification/verification.component.html","webpack:///./src/app/dproz-authentication/verification/verification.component.scss","webpack:///./src/app/dproz-authentication/verification/verification.component.ts","webpack:///./src/app/dproz-contact-us/dproz-contact-us.component.html","webpack:///./src/app/dproz-contact-us/dproz-contact-us.component.scss","webpack:///./src/app/dproz-contact-us/dproz-contact-us.component.ts","webpack:///./src/app/dproz-home/dproz-home.module.ts","webpack:///./src/app/dproz-home/home/home.component.html","webpack:///./src/app/dproz-home/home/home.component.scss","webpack:///./src/app/dproz-home/home/home.component.ts","webpack:///./src/app/dproz-prof-profile/dproz-prof-profile.component.html","webpack:///./src/app/dproz-prof-profile/dproz-prof-profile.component.scss","webpack:///./src/app/dproz-prof-profile/dproz-prof-profile.component.ts","webpack:///./src/app/dproz-profile/dproz-profile.module.ts","webpack:///./src/app/dproz-profile/profile/profile.component.html","webpack:///./src/app/dproz-profile/profile/profile.component.scss","webpack:///./src/app/dproz-profile/profile/profile.component.ts","webpack:///./src/app/dproz/dproz-main/dproz-main.component.html","webpack:///./src/app/dproz/dproz-main/dproz-main.component.scss","webpack:///./src/app/dproz/dproz-main/dproz-main.component.ts","webpack:///./src/app/dproz/dproz.module.ts","webpack:///./src/app/service/service.module.ts","webpack:///./src/app/services/basic-info/basic-info.component.html","webpack:///./src/app/services/basic-info/basic-info.component.scss","webpack:///./src/app/services/basic-info/basic-info.component.ts","webpack:///./src/app/services/dproz-credentials/dproz-credentials.component.html","webpack:///./src/app/services/dproz-credentials/dproz-credentials.component.scss","webpack:///./src/app/services/dproz-credentials/dproz-credentials.component.ts","webpack:///./src/app/services/dproz-experience/dproz-experience.component.html","webpack:///./src/app/services/dproz-experience/dproz-experience.component.scss","webpack:///./src/app/services/dproz-experience/dproz-experience.component.ts","webpack:///./src/app/services/edit-service-dialog.css","webpack:///./src/app/services/edit-service-dialog.html","webpack:///./src/app/services/services.component.html","webpack:///./src/app/services/services.component.scss","webpack:///./src/app/services/services.component.ts","webpack:///./src/app/shared/constants/constants.ts","webpack:///./src/app/shared/directives/responsive-menu.directive.ts","webpack:///./src/app/shared/domain/credential.ts","webpack:///./src/app/shared/domain/experience.ts","webpack:///./src/app/shared/gaurds/logged-in.guard.ts","webpack:///./src/app/shared/global-components/header/header.component.html","webpack:///./src/app/shared/global-components/header/header.component.scss","webpack:///./src/app/shared/global-components/header/header.component.ts","webpack:///./src/app/shared/http-interceptors/auth-token-interceptor.ts","webpack:///./src/app/shared/pipes/credential-type.pipe.ts","webpack:///./src/app/shared/services/authentication.service.ts","webpack:///./src/app/shared/services/credentials.service.ts","webpack:///./src/app/shared/services/document.service.ts","webpack:///./src/app/shared/services/places.service.ts","webpack:///./src/app/shared/services/projects.service.ts","webpack:///./src/app/shared/services/services.service.ts","webpack:///./src/app/shared/services/state.service.ts","webpack:///./src/app/shared/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\r\\n\\r\\n  <dproz-header></dproz-header>\\r\\n  <router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from './shared/services/authentication.service';\r\nimport { StateService } from './shared/services/state.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'dproz-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private service: AuthenticationService, private state: StateService, private router: Router) { }\r\n  title = 'app';\r\n\r\n  ngOnInit() {\r\n    if (window.localStorage.getItem('auth-token') && window.localStorage.getItem('user-reference')) {\r\n      this.state.next({ loggedIn: true, authToken: window.localStorage.getItem('auth-token'), userReferenceId:  window.localStorage.getItem('user-reference') });\r\n      this.service.getUser(this.state.getState().userReferenceId).subscribe(data => {\r\n        this.state.setIdentity(data);\r\n        // this.router.navigate(['../dproz/home']);\r\n      }, error => {\r\n        console.log(error);\r\n        this.state.resetState();\r\n        window.localStorage.removeItem('auth-token');\r\n        window.localStorage.removeItem('user-reference');\r\n        this.router.navigate(['../dproz/login']);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './shared/global-components/header/header.component';\r\nimport { AppRoute } from './app.routes';\r\nimport { DprozModule } from './dproz/dproz.module';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthenticationService } from './shared/services/authentication.service';\r\nimport { StateService } from './shared/services/state.service';\r\nimport { PlacesService } from './shared/services/places.service';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthTokenInterceptor } from './shared/http-interceptors/auth-token-interceptor';\r\nimport { DprozContactUsComponent } from './dproz-contact-us/dproz-contact-us.component';\r\nimport { DprozAboutUsComponent } from './dproz-about-us/dproz-about-us.component';\r\nimport { DocumentService } from './shared/services/document.service';\r\nimport { ServicesComponent, EditServiceComponent } from './services/services.component';\r\nimport { MatMenuModule, MatCardModule, MatTabsModule, MatStepperModule, MatListModule, MatDialogModule, MatInputModule, MatFormFieldModule, MatTreeModule, MatIconModule, MatProgressBarModule, MatCheckboxModule, MatButtonModule, MatIconRegistry, MatExpansionModule, MatDatepickerModule, MatNativeDateModule, MatOptionModule, MatSelectModule, MatPaginatorModule, MatChipsModule } from '@angular/material';\r\nimport { BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { ServiceModule } from './service/service.module';\r\nimport { BasicInfoComponent } from './services/basic-info/basic-info.component';\r\nimport { DprozProfProfileComponent } from './dproz-prof-profile/dproz-prof-profile.component';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\nimport { DprozExperienceComponent } from './services/dproz-experience/dproz-experience.component';\r\nimport { AngularFileUploaderModule } from \"angular-file-uploader\";\r\nimport { MatFileUploadModule } from 'angular-material-fileupload';\r\nimport { FileDropModule } from 'ngx-file-drop';\r\nimport { DprozCredentialsComponent } from './services/dproz-credentials/dproz-credentials.component';\r\n\r\nimport { ResponsiveMenuDirective } from './shared/directives/responsive-menu.directive';\r\nimport { CredentialTypePipe } from './shared/pipes/credential-type.pipe';\r\n\r\n\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthTokenInterceptor, multi: true },\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent, ResponsiveMenuDirective,CredentialTypePipe,\r\n    HeaderComponent,\r\n    DprozContactUsComponent,\r\n    DprozAboutUsComponent,\r\n    ServicesComponent, EditServiceComponent, BasicInfoComponent, DprozProfProfileComponent, DprozExperienceComponent, DprozCredentialsComponent,\r\n   \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    // Routing  \r\n    AppRoute, AngularFontAwesomeModule, MatOptionModule, MatSelectModule, MatPaginatorModule, MatChipsModule,\r\n    DprozModule, FormsModule,ReactiveFormsModule, MatFormFieldModule, MatStepperModule,MatInputModule, MatTreeModule, MatIconModule,MatProgressBarModule,\r\n    MatCardModule, MatTabsModule, BrowserAnimationsModule, MatListModule, MatDialogModule, \r\n    ServiceModule, MatCheckboxModule, MatButtonModule, MatIconModule, MatMenuModule, MatExpansionModule, MatDatepickerModule, MatNativeDateModule,\r\n    MatCheckboxModule, AngularFileUploaderModule,FileDropModule\r\n  ],\r\n  entryComponents: [EditServiceComponent,],\r\n  providers: [\r\n    AuthenticationService,\r\n    StateService,\r\n    PlacesService,\r\n    DocumentService,\r\n    httpInterceptorProviders, MatIconRegistry\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { DprozMainComponent } from './dproz/dproz-main/dproz-main.component';\r\nimport { HomeComponent } from './dproz-home/home/home.component';\r\nimport { LoginComponent } from './dproz-authentication/login/login.component';\r\nimport { VerificationComponent } from './dproz-authentication/verification/verification.component';\r\nimport { SignupComponent } from './dproz-authentication/signup/signup.component';\r\nimport { ProfileComponent } from './dproz-profile/profile/profile.component';\r\nimport { PasswordResetComponent } from './dproz-authentication/password-reset/password-reset.component';\r\nimport { LoggedInGuard } from './shared/gaurds/logged-in.guard';\r\nimport { DprozContactUsComponent } from './dproz-contact-us/dproz-contact-us.component';\r\nimport { DprozAboutUsComponent } from './dproz-about-us/dproz-about-us.component';\r\nimport { ServicesComponent } from './services/services.component';\r\nimport { DprozExperienceComponent } from './services/dproz-experience/dproz-experience.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'dproz',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'dproz',\r\n    component: DprozMainComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n      { path: 'home', component: HomeComponent },\r\n      { path: 'login', component: LoginComponent },\r\n      { path: 'authenticate/:code', component: VerificationComponent },\r\n      { path: 'authenticate', component: VerificationComponent },\r\n      { path: 'contact-us', component: DprozContactUsComponent },\r\n      { path: 'about-us', component: DprozAboutUsComponent },\r\n      { path: 'signup', component: SignupComponent },\r\n      { path: 'services', component: ServicesComponent },\r\n      { path: 'profile', component: ProfileComponent, canActivate: [LoggedInGuard] },\r\n      { path: 'password/:code', component: PasswordResetComponent },\r\n      { path: 'password', component: PasswordResetComponent },\r\n      { path: 'experience', component: DprozExperienceComponent }\r\n    ]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'home',\r\n    pathMatch: 'full'\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      routes, {\r\n        useHash: true\r\n      }\r\n    )\r\n  ],\r\n  exports: [ RouterModule ],\r\n  providers: [LoggedInGuard]\r\n})\r\n\r\nexport class AppRoute {}\r\n\r\n\r\n\r\n","module.exports = \"<div class=\\\"about_us_style\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row contact_row_style py-5\\\">\\r\\n      <div class=\\\"col-lg-12 \\\">\\r\\n         <h3>About Us</h3>\\r\\n         <div class=\\\"border_top border\\\"></div>\\r\\n         <p> HomePage  / <span>About Us</span> </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>  \\r\\n</div>\\r\\n<div class=\\\"container py-5\\\">\\r\\n    <div class=\\\"headding text-center pb-3\\\">\\r\\n      <h4 class=\\\"heading_style\\\">Who We Are.</h4>\\r\\n      <hr class=\\\"border_bott border\\\">\\r\\n      <p class=\\\"p_style\\\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. </p>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12 py-3\\\">\\r\\n        <div class=\\\"img_style text-md-center\\\">\\r\\n          <img class=\\\"img-fluid\\\" src=\\\"../../assets/images/1.png\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-12 py-3\\\">\\r\\n        <div class=\\\"contant_style\\\">\\r\\n          <span>\\r\\n            “ Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since. ”\\r\\n          </span>\\r\\n          <p class=\\\"p_style text-justify py-3\\\">\\r\\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","module.exports = \".about_us_style {\\n  background-image: url('top-about-img.png');\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  border-top: 4px solid #03a9f4;\\n  border-bottom: 4px solid #03a9f4; }\\n\\n.border_bott {\\n  border: 1px solid #03a9f4;\\n  padding: 2px;\\n  width: 50px;\\n  background: #03a9f4; }\\n\\n.border_top {\\n  padding: 2px;\\n  padding-bottom: 3px;\\n  background-color: #fff;\\n  width: 6%;\\n  border: none !important;\\n  margin-bottom: 10px; }\\n\\n.contact_row_style h3 {\\n  font-size: 28px;\\n  color: #fff;\\n  font-family: Myriad Pro;\\n  -webkit-font-family: Myriad Pro;\\n  font-weight: 90;\\n  font-weight: 600;\\n  text-transform: uppercase; }\\n\\n.contact_row_style p {\\n  font-size: 14px;\\n  color: #ffffff;\\n  text-transform: uppercase;\\n  margin-top: 6px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dproz-dproz-about-us',\r\n  templateUrl: './dproz-about-us.component.html',\r\n  styleUrls: ['./dproz-about-us.component.scss']\r\n})\r\nexport class DprozAboutUsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { VerificationComponent } from './verification/verification.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\r\nimport { RecaptchaModule, RECAPTCHA_SETTINGS, RecaptchaSettings } from 'ng-recaptcha';\r\nimport { RecaptchaFormsModule } from 'ng-recaptcha/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    RecaptchaModule.forRoot(),\r\n    RecaptchaFormsModule\r\n  ],\r\n  declarations: [SignupComponent, LoginComponent, VerificationComponent, PasswordResetComponent],\r\n  providers: [\r\n    {\r\n      provide: RECAPTCHA_SETTINGS,\r\n      useValue: { siteKey: \"6Lejo2kUAAAAAKpLBaJ4NtKM6tuv8wgIB9Wr0big\" } as RecaptchaSettings,\r\n    }\r\n  ]\r\n})\r\nexport class DprozAuthenticationModule { }\r\n","module.exports = \"<div class=\\\"form-container overlay\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div *ngIf=\\\"activeForm==='loginForm'\\\" class=\\\"offset-md-5 offset-sm-3 col-md-14 col-sm-18 form\\\">\\r\\n        <div class=\\\"form-text\\\">\\r\\n          <h2 class=\\\"overlay-text\\\">Log Into Your Provider or Consumer Account</h2>\\r\\n        </div>\\r\\n        <div class=\\\"form-inputs\\\">\\r\\n          <div class=\\\"form-icon\\\"> \\r\\n            <p>LOGIN</p>\\r\\n          </div>\\r\\n          <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLoginSubmit()\\\" novalidate>\\r\\n            <p *ngIf=\\\"loginErrorResponse\\\" class=\\\"error\\\" style=\\\"text-align: center\\\">Either emailId or password were incorrect. Please try again.</p>\\r\\n            <div>\\r\\n              <label for=\\\"email\\\">USERNAME</label>\\r\\n              <input type=\\\"text\\\" name=\\\"\\\" id=\\\"email\\\" placeholder=\\\"Email Address\\\" formControlName=\\\"username\\\">\\r\\n              <span *ngIf=\\\"loginForm.get('username').errors && loginForm.get('username').touched\\\" class=\\\"error\\\">Please enter an emailId.</span>\\r\\n            </div>\\r\\n            <div style=\\\"margin-bottom: 12px;\\\">\\r\\n              <label for=\\\"email\\\">PASSWORD</label>\\r\\n              <input type=\\\"password\\\" name=\\\"\\\" id=\\\"password\\\" placeholder=\\\"Email Password\\\" formControlName=\\\"password\\\">\\r\\n              <span *ngIf=\\\"loginForm.get('password').errors && loginForm.get('password').touched\\\" class=\\\"error\\\">Please enter a password.</span>\\r\\n              <span style=\\\"display: none;\\\" >Recover Password</span>\\r\\n            </div>\\r\\n            <p><a href=\\\"javascript:;\\\" (click)=\\\"toggleForm()\\\">*Recover Password</a></p>\\r\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\">LOG IN</button>                \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"activeForm==='forgotPasswordForm'\\\" class=\\\"offset-md-5 offset-sm-3 col-md-14 col-sm-18 form\\\">\\r\\n        <div class=\\\"form-text\\\">\\r\\n          <h2 class=\\\"overlay-text\\\">Enter your Email address</h2>\\r\\n        </div>\\r\\n        <div class=\\\"form-inputs\\\">\\r\\n          <div class=\\\"form-icon\\\"> \\r\\n            <p>Forgot Password</p>\\r\\n          </div>\\r\\n          <form [formGroup]=\\\"forgotPasswordForm\\\" (ngSubmit)=\\\"onForgotPasswordSubmit()\\\" novalidate>\\r\\n            <p *ngIf=\\\"fpErrorResponse\\\" class=\\\"error\\\" style=\\\"text-align: center\\\">Either emailId or password were incorrect. Please try again.</p>\\r\\n            <div style=\\\"margin-bottom: 12px;\\\">\\r\\n              <label for=\\\"email\\\">Email Address</label>\\r\\n              <input type=\\\"text\\\" name=\\\"\\\" id=\\\"email\\\" placeholder=\\\"Email Address\\\" formControlName=\\\"emailAddress\\\">\\r\\n              <span *ngIf=\\\"forgotPasswordForm.get('emailAddress').errors && forgotPasswordForm.get('emailAddress').touched\\\" class=\\\"error\\\">Please enter an emailId.</span>\\r\\n            </div>\\r\\n            <p><a  href=\\\"javascript:;\\\" (click)=\\\"toggleForm()\\\">*Go to Login Page</a></p>\\r\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"forgotPasswordForm.invalid\\\">Submit</button>                \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","module.exports = \".form {\\n  margin-bottom: 48px;\\n  text-align: center; }\\n  .form .form-element {\\n    margin-bottom: 12px; }\\n  .form .error {\\n    color: #fa1c1cf5; }\\n  .form .overlay-text {\\n    color: #fff; }\\n  .form .form-inputs {\\n    color: #737373; }\\n  .form .form-icon {\\n    background: #fff;\\n    box-shadow: 0px 0px 5px 0px;\\n    font-size: 24px;\\n    padding: 16px;\\n    z-index: 100;\\n    position: relative; }\\n  .form .form-icon p {\\n      margin-bottom: 0; }\\n  .form .form-text {\\n    padding-top: 50px;\\n    padding-bottom: 30px; }\\n  .form form {\\n    background-color: #fff;\\n    box-shadow: 0px 1px 5px 0px;\\n    padding: 24px;\\n    text-align: left;\\n    z-index: 2;\\n    position: relative; }\\n  .form form .user-type {\\n      margin-bottom: 12px; }\\n  .form form .user-type #PRO, .form form .user-type #USER {\\n        width: auto;\\n        display: inline-block;\\n        margin: 0;\\n        padding: 0; }\\n  .form form .user-type input {\\n        vertical-align: middle; }\\n  .form form .user-type label {\\n        margin-right: 48px; }\\n  .form form input {\\n      width: 100%;\\n      border-radius: 4px;\\n      border-color: rgba(54, 69, 79, 0.36);\\n      border-style: solid;\\n      border-width: 1px;\\n      font-size: .875em;\\n      padding: 7px; }\\n  .form form label, .form form p {\\n      font-size: .875em;\\n      font-weight: 600;\\n      margin-bottom: 2px; }\\n  .form form button {\\n      display: block;\\n      cursor: pointer;\\n      margin: auto;\\n      margin-top: 24px;\\n      width: 20vw; }\\n  .form-container {\\n  background: url('signup.png') no-repeat;\\n  background-size: 100% 260px;\\n  position: relative; }\\n  .overlay:before {\\n  position: absolute;\\n  content: \\\" \\\";\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 260px;\\n  display: block;\\n  z-index: 0;\\n  background-color: rgba(3, 169, 244, 0.9); }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\r\nimport { AuthenticationService } from '../../shared/services/authentication.service';\r\nimport { StateService } from '../../shared/services/state.service';\r\nimport { Auth } from '../../shared/interfaces/auth';\r\nimport { ServicesService } from '../../shared/services/services.service';\r\n\r\n@Component({\r\n  selector: 'dproz-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  forgotPasswordForm: FormGroup;\r\n  loginErrorResponse: Response;\r\n  fpErrorResponse: Response;\r\n  activeForm = 'loginForm';\r\n  private TREE_DATA = {};\r\n\r\n\r\n  constructor(private services:ServicesService,\r\n              private fb: FormBuilder, \r\n              private router: Router, \r\n              private service: AuthenticationService,\r\n              private state: StateService) { }\r\n  // Dproz@123\r\n  ngOnInit() {\r\n    this.loginForm = this.fb.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],      \r\n    })\r\n\r\n    this.forgotPasswordForm = this.fb.group({\r\n      emailAddress: ['', Validators.required],\r\n    })\r\n  }\r\n\r\n  toggleForm() {\r\n    this.activeForm = this.activeForm==='loginForm' ? 'forgotPasswordForm' : 'loginForm';\r\n  }\r\n  \r\n  onLoginSubmit() {\r\n    this.service.login(this.loginForm.getRawValue()).subscribe(({ Authorization, userReferenceId } : Auth) => {\r\n      window.localStorage.setItem('auth-token', Authorization);\r\n      window.localStorage.setItem('user-reference', userReferenceId);\r\n      this.loginErrorResponse = null;\r\n      this.state.next({loggedIn: true, authToken: Authorization, userReferenceId});\r\n\r\n\r\n      this.service.getUser(this.state.getState().userReferenceId).subscribe(data => {\r\n        console.log(\"user get data\");\r\n        console.log(data);\r\n        localStorage.setItem(\"user_details\", JSON.stringify(data));\r\n        this.state.setIdentity(data);\r\n        this.router.navigate(['../dproz/home']);\r\n      });\r\n\r\n      this.services.getServices().subscribe( x => {\r\n \r\n        console.log(x);\r\n        let y = JSON.parse(JSON.stringify(x));\r\n  \r\n         for( let i = 0; i< y.length; i++)\r\n         {\r\n           let k = y[i];\r\n          \r\n            if(this.TREE_DATA[k.category.categoryName] == undefined)\r\n            {\r\n              this.TREE_DATA[k.category.categoryName]  = {};\r\n            } \r\n\r\n              this.TREE_DATA[k.category.categoryName][k.serviceId]  = k.serviceDescription;\r\n            \r\n        \r\n         }\r\n\r\n         localStorage.setItem(\"service_tree\", JSON.stringify(this.TREE_DATA));\r\n         localStorage.setItem(\"all_services\", JSON.stringify(x));\r\n\r\n\r\n         console.log(this.TREE_DATA);\r\n  \r\n      \r\n      });\r\n\r\n    }, (error) => {\r\n      this.loginErrorResponse = error;\r\n    })\r\n  }\r\n\r\n  onForgotPasswordSubmit() {\r\n    this.service.forgotPassword(this.forgotPasswordForm.getRawValue()).subscribe(() => {\r\n\r\n    }, error => {\r\n      this.fpErrorResponse = error;\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"contact_us_style\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row contact_row_style py-5\\\">\\r\\n      <div class=\\\"col-lg \\\">\\r\\n        <h3>Password Change</h3>\\r\\n        <div class=\\\"border_top border\\\"></div>\\r\\n       \\r\\n        <p>HomePage  &nbsp;&nbsp; /&nbsp;&nbsp; <span>Passwod Reset</span> </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!resetPassword\\\" class=\\\"password-container\\\">\\r\\n  <div class=\\\"form offset-md-5 offset-sm-3 col-md-14 col-sm-18 \\\">\\r\\n    <h5 class=\\\"overlay-text\\\">Request Password Change</h5>    \\r\\n    <form [formGroup]=\\\"changePasswordForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n      <div  *ngIf=\\\"activeForm==='changePasswordForm'\\\" class=\\\"form-element\\\">\\r\\n        <label for=\\\"oldPassword\\\">OLD PASSWORD</label>\\r\\n        <input type=\\\"password\\\" name=\\\"oldPassword\\\" id=\\\"oldPassword\\\" placeholder=\\\"Enter Old Password\\\" formControlName=\\\"oldPassword\\\">\\r\\n        <!-- <span *ngIf=\\\"hasError('password', 'required')\\\" class=\\\"error\\\">Please enter a password.</span>\\r\\n        <span *ngIf=\\\"hasError('password', 'minlength')\\\" class=\\\"error\\\">Password should be at least 8 characters.</span> -->\\r\\n      </div>\\r\\n      <div class=\\\"form-element\\\">\\r\\n        <label for=\\\"newPassword\\\">NEW PASSWORD</label>\\r\\n        <input type=\\\"password\\\" name=\\\"newPassword\\\" id=\\\"newPassword\\\" placeholder=\\\"Enter New Password\\\" formControlName=\\\"newPassword\\\">\\r\\n        <!-- <span *ngIf=\\\"hasError('password', 'required')\\\" class=\\\"error\\\">Please enter a password.</span>\\r\\n        <span *ngIf=\\\"hasError('password', 'minlength')\\\" class=\\\"error\\\">Password should be at least 8 characters.</span> -->\\r\\n      </div>\\r\\n      <div class=\\\"form-element\\\">\\r\\n        <label for=\\\"confirmPassword\\\">CONFIRM NEW PASSWORD</label>\\r\\n        <input type=\\\"password\\\" name=\\\"confirmPassword\\\" id=\\\"confirmPassword\\\" placeholder=\\\"Confirm New Password\\\" formControlName=\\\"confirmPassword\\\">\\r\\n        <!-- <span *ngIf=\\\"hasError('password', 'required')\\\" class=\\\"error\\\">Please enter a password.</span>\\r\\n        <span *ngIf=\\\"hasError('password', 'minlength')\\\" class=\\\"error\\\">Password should be at least 8 characters.</span> -->\\r\\n      </div>\\r\\n      <!-- <span *ngIf=\\\"forgotPasswordForm.errors\\\" class=\\\"error\\\">Please enter the verification code.</span> -->\\r\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"changePasswordForm.invalid\\\">Submit</button>            \\r\\n    </form>\\r\\n  </div>\\r\\n  <p *ngIf=\\\"error\\\" style=\\\"margin-top: 12px;\\\" class=\\\"error\\\">Please enter a valid email.</p>\\r\\n</div>\\r\\n<div *ngIf=\\\"resetPassword\\\" style=\\\"text-align: center; margin-top: 10vh;\\\">\\r\\n  <img style=\\\"height: 100px;\\\" src=\\\"../../../assets/images/check-mark-md.png\\\">\\r\\n  <p style=\\\"margin-top: 12px;\\\">An email has been sent for reseting the password to your registered email.</p>\\r\\n</div>\"","module.exports = \".form {\\n  margin-bottom: 48px;\\n  text-align: center; }\\n  .form .form-element {\\n    margin-bottom: 12px; }\\n  .form .error {\\n    color: #fa1c1cf5; }\\n  .form .overlay-text {\\n    color: #fff; }\\n  .form .form-inputs {\\n    color: #737373; }\\n  .form .form-icon {\\n    background: #fff;\\n    box-shadow: 0px 0px 5px 0px;\\n    font-size: 24px;\\n    padding: 16px;\\n    z-index: 100;\\n    position: relative; }\\n  .form .form-icon p {\\n      margin-bottom: 0; }\\n  .form .form-text {\\n    padding-top: 50px;\\n    padding-bottom: 30px; }\\n  .form form {\\n    background-color: #fff;\\n    box-shadow: 0px 1px 5px 0px;\\n    padding: 24px;\\n    text-align: left;\\n    z-index: 2;\\n    position: relative; }\\n  .form form .user-type {\\n      margin-bottom: 12px; }\\n  .form form .user-type #PRO, .form form .user-type #USER {\\n        width: auto;\\n        display: inline-block;\\n        margin: 0;\\n        padding: 0; }\\n  .form form .user-type input {\\n        vertical-align: middle; }\\n  .form form .user-type label {\\n        margin-right: 48px; }\\n  .form form input {\\n      width: 100%;\\n      border-radius: 4px;\\n      border-color: rgba(54, 69, 79, 0.36);\\n      border-style: solid;\\n      border-width: 1px;\\n      font-size: .875em;\\n      padding: 7px; }\\n  .form form label, .form form p {\\n      font-size: .875em;\\n      font-weight: 600;\\n      margin-bottom: 2px; }\\n  .form form button {\\n      display: block;\\n      cursor: pointer;\\n      margin: auto;\\n      margin-top: 24px;\\n      width: 20vw; }\\n  .form-container {\\n  background: url('signup.png') no-repeat;\\n  background-size: 100% 260px;\\n  position: relative; }\\n  .overlay:before {\\n  position: absolute;\\n  content: \\\" \\\";\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 260px;\\n  display: block;\\n  z-index: 0;\\n  background-color: rgba(3, 169, 244, 0.9); }\\n  .password-container {\\n  margin-top: 10vh;\\n  text-align: center;\\n  display: flex;\\n  flex-direction: column; }\\n  .password-container .input {\\n    display: inline-flex;\\n    justify-content: center; }\\n  .password-container .error {\\n    color: red; }\\n  .contact_us_style {\\n  background-image: url('top-about-img.png');\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  border-top: 4px solid #03a9f4;\\n  border-bottom: 4px solid #03a9f4; }\\n  .contact_row_style h3 {\\n  font-size: 28px;\\n  color: #fff;\\n  font-family: Myriad Pro;\\n  -webkit-font-family: Myriad Pro;\\n  font-weight: 90;\\n  font-weight: 600;\\n  text-transform: uppercase; }\\n  .border_top {\\n  padding: 2px;\\n  padding-bottom: 3px;\\n  background-color: #fff;\\n  width: 6%;\\n  border: none !important;\\n  margin-bottom: 10px; }\\n  .contact_row_style p {\\n  font-size: 14px;\\n  color: #ffffff;\\n  text-transform: uppercase;\\n  margin-top: 6px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../../shared/services/authentication.service';\r\nimport { StateService } from '../../shared/services/state.service';\r\nimport { FormGroup, Validators, FormBuilder, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\n\r\nconst passwordValidation: ValidatorFn = (fg: FormGroup) => {\r\n\r\n  return null\r\n};\r\n@Component({\r\n  selector: 'dproz-password-reset',\r\n  templateUrl: './password-reset.component.html',\r\n  styleUrls: ['./password-reset.component.scss']\r\n})\r\nexport class PasswordResetComponent implements OnInit {\r\n\r\n  isLoggedIn: boolean;\r\n  forgotPasswordForm: FormGroup;\r\n  changePasswordForm: FormGroup;\r\n  activeForm = 'changePasswordForm';\r\n  emailId;\r\n  error;\r\n  resetPassword;\r\n  errorMessage;\r\n\r\n  constructor(private service: AuthenticationService, private router: Router, private route: ActivatedRoute, private fb: FormBuilder, private state: StateService) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoggedIn =  this.state.getState().loggedIn;\r\n    this.changePasswordForm = this.fb.group({\r\n      oldPassword: ['Dproz@123', this.activeForm==='forgotPasswordForm' ? [Validators.required] : []],\r\n      newPassword: ['Dproz@1234', Validators.required],\r\n      confirmPassword: ['Dproz@1234', Validators.required],\r\n      userReferenceId: ['', Validators.required]\r\n    }, { validator: passwordValidation })\r\n    \r\n    // this.forgotPasswordForm = this.fb.group({\r\n    //   emailAddress: ['', Validators.required]\r\n    // })\r\n\r\n    this.route.params.subscribe(data => {\r\n      if (data.code && !this.isLoggedIn) {\r\n        let a = 'eyJhbGciOiJIUzUxMiIsInppcCI6IkRFRiJ9.eNo0jMEOgjAQRP9lz4RsS2laTl698gcLXZQohbRWjMZ_d010LpNM3rwX5DJAB_d8prSQ1vZwWmi-1uO6QAVUwsxxZCFKvMR1jzKOienGATrVNlp5J2WdrWDOWbhdUoctrc-fo2ROPU9fzVFOgEjeGtOixWCc1wO6RhkV_DQgORPkwo_tb_fYNu8PAAAA__8.4n83875p9g0xa--8v80ztPwJZK0jEOQwDHa3UAB462v2FblfZoIuN0NcfOL1531hP6nCXiRtvH2pnpqlH60DCA';\r\n        this.service.verifyEmail(data.code).subscribe(({Authorization, userReferenceId}) => {\r\n          window.localStorage.setItem('auth-token', Authorization);\r\n          this.changePasswordForm.get('userReferenceId').setValue(userReferenceId);\r\n          this.activeForm = 'forgotPasswordForm';\r\n\r\n        }, error => {\r\n          this.activeForm = 'inActive';\r\n          this.errorMessage = 'Unable to retrieve account Info.'\r\n        });\r\n      } else if (!data.code && !this.isLoggedIn) {\r\n        this.router.navigate(['../dproz/login']);\r\n      } else {\r\n        this.activeForm = 'changePasswordForm';\r\n        this.changePasswordForm.get('userReferenceId').setValue(this.state.getState().userReferenceId);\r\n      }\r\n    })\r\n  }\r\n\r\n  formValidator(c) {\r\n   return this.activeForm === 'changePasswordForm' ? Validators.required : null;\r\n  }\r\n\r\n  // passwordValidation(control: FormGroup): ValidatorFn {\r\n  //   return (c) => {\r\n  //     if (this.activeForm==='changePasswordForm' && control.get('oldPassword').value !== control.get('newPassword').value) {\r\n  //       return {unchangedPassword: 'New password cannot be same as the old password.'}\r\n  //     }\r\n  //     if(control.get('newPassword') !== control.get('confirmPassword')){\r\n  //       return {passwordMismatch: 'Password does not match the new password.'}\r\n  //     }\r\n  //     return null;\r\n  //   }\r\n  // }\r\n\r\n  email(e) {\r\n    this.error = false;\r\n    this.emailId = e.target.value;\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    if (this.changePasswordForm.valid) {\r\n      let formData = this.changePasswordForm.getRawValue();\r\n      // if (this.activeForm==='forgotPasswordForm') {\r\n      //   delete formData.oldPassword;\r\n      // }\r\n      this.service.changePassword(formData).subscribe(() => {\r\n        window.localStorage.removeItem('auth-token');\r\n        window.localStorage.removeItem('user-reference');\r\n        this.router.navigate(['../dproz/login']);\r\n      }, (error: HttpErrorResponse) => {\r\n        console.log(error.status);\r\n        if (error.status === 400) {\r\n\r\n        }\r\n        console.log(error, `Error while resetting password`);\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"form-container overlay\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"offset-md-5 offset-sm-3 col-md-14 col-sm-18 form\\\">\\r\\n      <div class=\\\"form-text\\\">\\r\\n        <h2 class=\\\"overlay-text\\\">Create An Account</h2>\\r\\n        <p class=\\\"overlay-text\\\">Please fill in your information and choose to be Provider or Consumer.</p>\\r\\n      </div>\\r\\n      <div class=\\\"form-inputs\\\">\\r\\n        <div class=\\\"form-icon\\\"> \\r\\n          <p>SIGNUP</p>\\r\\n        </div>\\r\\n        <form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n          <div class=\\\"form-element\\\">\\r\\n            <label for=\\\"first-name\\\">FIRST NAME</label>\\r\\n            <input type=\\\"text\\\" name=\\\"\\\" id=\\\"first-name\\\"  placeholder=\\\"Enter First Name\\\" formControlName=\\\"firstName\\\">\\r\\n            <span *ngIf=\\\"hasError('firstName', 'required')\\\" class=\\\"error\\\">Please enter first name.</span>\\r\\n            <span *ngIf=\\\"hasError('firstName', 'minlength')\\\" class=\\\"error\\\">First Name should be at least 2 characters.</span>\\r\\n          </div>\\r\\n          <div class=\\\"form-element\\\">\\r\\n            <label for=\\\"last-name\\\">LAST NAME</label>\\r\\n            <input type=\\\"text\\\" name=\\\"\\\" id=\\\"last-name\\\" placeholder=\\\"Enter Last Name\\\" formControlName=\\\"lastName\\\">\\r\\n            <span *ngIf=\\\"hasError('lastName', 'required')\\\" class=\\\"error\\\">Please enter last name.</span>\\r\\n            <span *ngIf=\\\"hasError('lastName', 'minlength')\\\" class=\\\"error\\\">Last Name should be at least 2 characters.</span>\\r\\n          </div>\\r\\n          <div class=\\\"form-element\\\">\\r\\n            <label for=\\\"email\\\">EMAIL</label>\\r\\n            <input type=\\\"text\\\" name=\\\"\\\" id=\\\"email\\\" placeholder=\\\"Enter Email\\\" formControlName=\\\"emailAddress\\\">\\r\\n            <span *ngIf=\\\"hasError('emailAddress', 'required')\\\" class=\\\"error\\\">Please enter your email.</span>\\r\\n            <span *ngIf=\\\"hasError('emailAddress', 'invalidEmail')\\\" class=\\\"error\\\">Please enter a valid email.</span>\\r\\n            <span *ngIf=\\\"hasError('emailAddress', 'email')\\\" class=\\\"error\\\">Please enter a valid email.</span>\\r\\n          </div>\\r\\n          <div class=\\\"form-element\\\">\\r\\n            <label for=\\\"password\\\">PASSWORD</label>\\r\\n            <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Enter Password\\\" formControlName=\\\"password\\\">\\r\\n            <span *ngIf=\\\"hasError('password', 'required')\\\" class=\\\"error\\\">Please enter a password.</span>\\r\\n            <span *ngIf=\\\"hasError('password', 'pattern')\\\" class=\\\"error\\\">Password should be at least 8 characters, one Upper case, number and one non-alphanumeric.</span>\\r\\n          </div>\\r\\n          <div class=\\\"form-element\\\">\\r\\n            <label for=\\\"name\\\">RE-TYPE PASSWORD</label>\\r\\n            <input type=\\\"password\\\" name=\\\"\\\" id=\\\"retype-password\\\" placeholder=\\\"Re-Enter Password\\\" formControlName=\\\"repeatPassword\\\">\\r\\n            <span *ngIf=\\\"hasError('repeatPassword', 'required')\\\" class=\\\"error\\\">Please re-enter your password.</span>\\r\\n             <span *ngIf=\\\"signupForm.get('repeatPassword').getError('passMismatch')\\\" class=\\\"error\\\">The passwords do not match. Please retry.</span>\\r\\n            <span *ngIf=\\\"signupForm.get('repeatPassword').getError('confirmedPassword')\\\" class=\\\"error\\\">The your passwords do not match. Please retry.</span>\\r\\n     \\r\\n          </div>\\r\\n          <div class=\\\"user-type form-element\\\">\\r\\n            <p>USER TYPE</p>\\r\\n            <input type=\\\"checkbox\\\" name=\\\"Service Provider\\\" id=\\\"PRO\\\" (click)=\\\"userType($event)\\\" [checked]=\\\"user==='PRO'\\\">\\r\\n            <label for=\\\"PRO\\\">Service Provider</label>\\r\\n            <input type=\\\"checkbox\\\" name=\\\"Service Consumer\\\" id=\\\"USER\\\" (click)=\\\"userType($event)\\\" [checked]=\\\"user==='USER'\\\">\\r\\n            <label for=\\\"USER\\\">Service Consumer</label>\\r\\n          </div>\\r\\n          <span *ngIf=\\\"hasError('userType')\\\" class=\\\"error\\\">Please choose service type.</span>\\r\\n          <div *ngIf=\\\"signupForm.get('userType').value==='PRO'\\\" class=\\\"form-element\\\">\\r\\n            <select id=\\\"state\\\" (change)=\\\"addressChange($event)\\\">\\r\\n              <option [value]=null style=\\\"display: none\\\">Select State</option>\\r\\n              <option *ngFor=\\\"let state of states\\\" [value]=\\\"state._region\\\" [selected]=\\\"signupForm.getRawValue().address.region===state._region\\\">{{state._region}}</option>\\r\\n            </select>\\r\\n            <select id=\\\"city\\\" (change)=\\\"addressChange($event)\\\">\\r\\n              <option [value]=null style=\\\"display: none\\\">Select City</option>\\r\\n              <option *ngFor=\\\"let city of cities\\\" [value]=\\\"city._city\\\" [selected]=\\\"signupForm.getRawValue().address.city===city._city\\\">{{city._city}}</option>\\r\\n            </select>\\r\\n            <select id=\\\"county\\\" (change)=\\\"addressChange($event)\\\">\\r\\n              <option [value]=null style=\\\"display: none\\\">Select County</option>\\r\\n              <option *ngFor=\\\"let county of counties\\\" [value]=\\\"county._county\\\" [selected]=\\\"signupForm.getRawValue().address.county===county._county\\\">{{county._county}}</option>\\r\\n            </select>\\r\\n            <select id=\\\"street\\\" (change)=\\\"addressChange($event)\\\">\\r\\n              <option [value]=null style=\\\"display: none\\\">Select Street</option>\\r\\n              <option *ngFor=\\\"let street of streets\\\" [value]=\\\"street._street\\\" [selected]=\\\"signupForm.getRawValue().address.street===street._street\\\">{{street._street}}</option>\\r\\n            </select>\\r\\n            <!-- <span *ngIf=\\\"signupForm.get('repeatPassword').getError('passMismatch')\\\" class=\\\"error\\\">The passwords do not match. Please retry.</span> -->\\r\\n          </div>\\r\\n          <re-captcha [formControlName]=\\\"'recaptcha'\\\" (resolved)=\\\"resolved($event)\\\" siteKey=\\\"6Lejo2kUAAAAAKpLBaJ4NtKM6tuv8wgIB9Wr0big\\\"></re-captcha>\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"signupForm.invalid\\\">SUBMIT</button>\\r\\n        </form>\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","module.exports = \".form {\\n  margin-bottom: 48px;\\n  text-align: center; }\\n  .form .form-element {\\n    margin-bottom: 12px; }\\n  .form .error {\\n    color: #fa1c1cf5; }\\n  .form .overlay-text {\\n    color: #fff; }\\n  .form .form-inputs {\\n    color: #737373; }\\n  .form .form-icon {\\n    background: #fff;\\n    box-shadow: 0px 0px 5px 0px;\\n    font-size: 24px;\\n    padding: 16px;\\n    z-index: 100;\\n    position: relative; }\\n  .form .form-icon p {\\n      margin-bottom: 0; }\\n  .form .form-text {\\n    padding-top: 50px;\\n    padding-bottom: 30px; }\\n  .form form {\\n    background-color: #fff;\\n    box-shadow: 0px 1px 5px 0px;\\n    padding: 24px;\\n    text-align: left;\\n    z-index: 2;\\n    position: relative; }\\n  .form form .user-type {\\n      margin-bottom: 12px; }\\n  .form form .user-type #PRO, .form form .user-type #USER {\\n        width: auto;\\n        display: inline-block;\\n        margin: 0;\\n        padding: 0; }\\n  .form form .user-type input {\\n        vertical-align: middle; }\\n  .form form .user-type label {\\n        margin-right: 48px; }\\n  .form form input {\\n      width: 100%;\\n      border-radius: 4px;\\n      border-color: rgba(54, 69, 79, 0.36);\\n      border-style: solid;\\n      border-width: 1px;\\n      font-size: .875em;\\n      padding: 7px; }\\n  .form form label, .form form p {\\n      font-size: .875em;\\n      font-weight: 600;\\n      margin-bottom: 2px; }\\n  .form form button {\\n      display: block;\\n      cursor: pointer;\\n      margin: auto;\\n      margin-top: 24px;\\n      width: 20vw; }\\n  .form-container {\\n  background: url('signup.png') no-repeat;\\n  background-size: 100% 260px;\\n  position: relative; }\\n  .overlay:before {\\n  position: absolute;\\n  content: \\\" \\\";\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 260px;\\n  display: block;\\n  z-index: 0;\\n  background-color: rgba(3, 169, 244, 0.9); }\\n  .form-element select {\\n  margin-right: 2vw;\\n  min-width: 123px; }\\n\"","import { debounce } from 'rxjs/operators';\r\nimport { Component, OnInit, } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators, ValidatorFn, AbstractControl } from '@angular/forms'\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../../shared/services/authentication.service';\r\nimport { StateService } from '../../shared/services/state.service';\r\n\r\nimport * as isEmail from 'isemail';\r\nimport { PlacesService } from '../../shared/services/places.service';\r\nimport { timer } from 'rxjs';\r\nimport { controlNameBinding } from '@angular/forms/src/directives/reactive_directives/form_control_name';\r\nimport { UserService } from '../../shared/services/user.service';\r\n\r\n\r\n//custom password validator \r\nfunction passwordMatchValidator(password:string): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n \r\n    if (control.value !== undefined && ( (password != control.value))) {\r\n    \r\n      return { 'confirmedPassword': true };\r\n    }\r\n    return null;\r\n  };\r\n}\r\n\r\n//custom username exists validator \r\nfunction usernameValidator(users: UserService): ValidatorFn {\r\n\r\n  \r\n  return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n    if (control.value !== undefined && (isNaN(control.value))) {\r\n      return { 'validPassword': true };\r\n    }\r\n    return null;\r\n  };\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'dproz-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\n\r\nexport class SignupComponent implements OnInit {\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private router: Router,\r\n    private service: AuthenticationService,\r\n    private state: StateService,\r\n    private placesService: PlacesService) { }\r\n\r\n  signupForm: FormGroup;\r\n  user = '';\r\n  states = [];\r\n  cities = [];\r\n  counties = [];\r\n  streets = [];\r\n  selectedState = '';\r\n  selectedCity = '';\r\n  selectedCounty = '';\r\n  passPattern:RegExp =  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\r\n\r\n  ngOnInit() {\r\n    this.signupForm = this.fb.group({\r\n      userType: ['', Validators.required],\r\n      firstName: ['', [Validators.required, Validators.minLength(2)]],\r\n      lastName: ['', [Validators.required, Validators.minLength(2)]],\r\n      middleName: '',\r\n      emailAddress: ['', Validators.compose([Validators.required, Validators.email])],\r\n      password: ['', [Validators.pattern(this.passPattern)]],\r\n      repeatPassword: ['', Validators.required],\r\n      // profilePictureUrl: null,\r\n      lastChangedPasswordOn: null,\r\n      verificationDate: null,\r\n      verified: true,\r\n      recaptcha: [null, Validators.required],\r\n      phone: this.fb.group({\r\n        phoneNumber: '',\r\n        primary: true,\r\n        contactMethod: 'CALL'\r\n      }),\r\n      address: this.fb.group({\r\n        longitude: [0, [this.requiredValidator.bind(this)]],\r\n        latitude: [0, this.requiredValidator.bind(this)],\r\n        street: ['', this.requiredValidator.bind(this)],\r\n        city: ['', this.requiredValidator.bind(this)],\r\n        county: ['', this.requiredValidator.bind(this)],\r\n        region: ['', this.requiredValidator.bind(this)],\r\n        country: ['', this.requiredValidator.bind(this)],\r\n        postcode: ['', this.requiredValidator.bind(this)],\r\n        timezone: ['', this.requiredValidator.bind(this)]\r\n      })\r\n    });\r\n\r\n    let password = this.signupForm.get('password') as FormControl;\r\n    let repeatPassword = this.signupForm.get('repeatPassword') as FormControl;\r\n\r\n    password.valueChanges.pipe( debounce( ()=> timer(1000)))\r\n                         .subscribe( pass =>{\r\n\r\n                          console.log(pass);\r\n                          repeatPassword.setValidators(passwordMatchValidator(pass));\r\n              \r\n                         });\r\n\r\n                  \r\n\r\n    this.placesService.getRegions().subscribe(regions => {\r\n      this.states = regions;\r\n      console.log(this.states);\r\n\r\n    });\r\n\r\n    this.userChange();\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.signupForm.get('password').value !== this.signupForm.get('repeatPassword').value) {\r\n      this.signupForm.get('repeatPassword').setErrors({ passMismatch: \"password\" })\r\n    }\r\n    if (!isEmail.validate(this.signupForm.get('emailAddress').value))\r\n      this.signupForm.get('emailAddress').setErrors({ invalidEmail: 'error' });\r\n\r\n    if (this.signupForm.valid) {\r\n      let form = this.signupForm.getRawValue();\r\n      // if (form.userType === 'USER') {\r\n      //   delete form.address;\r\n      // }\r\n      this.service.signup(form).subscribe(({ userReferenceId }) => {\r\n        window.sessionStorage.setItem('encoded', window.btoa(this.signupForm.get('emailAddress').value));\r\n        this.state.setReferenceId(userReferenceId);\r\n        this.state.setIdentity({ emailAddress: form.emailAddress })\r\n        this.router.navigate(['../dproz/authenticate']);\r\n      }, error => {\r\n        window.sessionStorage.setItem('encoded', window.btoa(this.signupForm.get('emailAddress').value));\r\n        // this.router.navigate(['../dproz/authenticate']);\r\n        console.log(error, `Error!!!!`)\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  resolved(captchaResponse: string) {\r\n    console.log(`Resolved captcha with response ${captchaResponse}:`);\r\n  }\r\n\r\n  userChange() {\r\n    this.signupForm.get('userType').valueChanges.subscribe(v => {\r\n      Object.keys((this.signupForm.get('address') as FormGroup).controls).forEach(element => {\r\n        this.signupForm.get('address').get(element).updateValueAndValidity();\r\n      });\r\n    })\r\n  }\r\n\r\n  addressChange(e) {\r\n    if (e.target.id === 'state') {\r\n      this.selectedState = e.target.value;\r\n      this.signupForm.get('address').get('region').setValue(null);\r\n      this.signupForm.get('address').get('county').setValue(null);\r\n      this.signupForm.get('address').get('street').setValue(null);\r\n      this.placesService.getCities(this.selectedState).subscribe(cities => {\r\n        this.cities = cities;\r\n      })\r\n    } else if (e.target.id === 'city') {\r\n      this.signupForm.get('address').get('county').setValue(null);\r\n      this.signupForm.get('address').get('street').setValue(null);\r\n      this.selectedCity = e.target.value\r\n      this.placesService.getCounties(this.selectedState, this.selectedCity).subscribe(counties => {\r\n        this.counties = counties;\r\n      })\r\n    } else if (e.target.id === 'county') {\r\n      this.signupForm.get('address').get('street').setValue(null);\r\n      this.selectedCounty = e.target.value;\r\n      this.placesService.getStreets(this.selectedState, this.selectedCity, this.selectedCounty).subscribe(streets => {\r\n        this.streets = streets;\r\n      })\r\n    } else if (e.target.id === 'street') {\r\n      let addressSelected: any = this.streets.find(el => el._street === e.target.value && el._county === this.selectedCounty);\r\n\r\n      this.signupForm.patchValue({\r\n        address: {\r\n          longitude: addressSelected._longitude,\r\n          latitude: addressSelected._latitude,\r\n          street: addressSelected._street,\r\n          city: addressSelected._city,\r\n          county: addressSelected._county,\r\n          postcode: addressSelected._postcode,\r\n          region: addressSelected._region,\r\n          country: addressSelected._country,\r\n          timezone: addressSelected._timezone\r\n        }\r\n      });\r\n      console.log(this.signupForm.get('address'));\r\n    }\r\n  }\r\n\r\n  userType(e) {\r\n\r\n    this.user = e.target.id;\r\n    let { checked } = e.target;\r\n    if (checked)\r\n      this.signupForm.get('userType').setValue(this.user);\r\n    else\r\n      this.signupForm.get('userType').setValue('');\r\n  }\r\n\r\n  userTypeError() {\r\n    this.signupForm.get('userType').errors\r\n  }\r\n\r\n  hasError(input, type?: string) {\r\n    return (type ? this.signupForm.get(input).getError(type) : this.signupForm.get(input).errors)\r\n      && this.signupForm.get(input).touched;\r\n  }\r\n\r\n  requiredValidator(c) {\r\n    return (this.user === 'PRO' && !c.value) ? { required: true } : null;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"form-container overlay\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"offset-md-5 offset-sm-3 col-md-14 col-sm-18 form\\\">\\r\\n        <div class=\\\"form-text\\\">\\r\\n          <h2 class=\\\"overlay-text\\\">{{ pageIntent }}</h2>\\r\\n          <p class=\\\"overlay-text\\\" *ngIf=\\\"activeForm==='verificationForm'\\\">Please fill in your verification code sent over the email<strong style=\\\"color: black\\\" *ngIf=\\\"email\\\">: {{ email }} </strong>you registered.</p>\\r\\n        </div>\\r\\n        <div class=\\\"form-inputs\\\">\\r\\n          <div class=\\\"form-icon\\\"> \\r\\n            <p>{{ activeForm==='verificationForm' ? 'VERIFICATION' : 'ENTER EMAIL' }}</p>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"activeForm==='verificationForm'\\\">\\r\\n            <form [formGroup]=\\\"verificationForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n              <label for=\\\"code\\\">CODE</label>\\r\\n              <input type=\\\"text\\\" name=\\\"\\\" id=\\\"code\\\" placeholder=\\\"Enter Code\\\" formControlName=\\\"code\\\">\\r\\n              <span *ngIf=\\\"this.verificationForm.errors\\\" class=\\\"error\\\">Please enter the verification code.</span>\\r\\n              <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Verify\\\" [disabled]=\\\"!verificationForm.valid\\\">VERIFY</button>            \\r\\n            </form>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"activeForm==='resendTokenForm'\\\">\\r\\n            <form [formGroup]=\\\"resendTokenForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n              <label for=\\\"emailId\\\">EMAIL</label>\\r\\n              <input type=\\\"text\\\" name=\\\"emailId\\\" id=\\\"code\\\" placeholder=\\\"Enter Email\\\" formControlName=\\\"emailId\\\">\\r\\n              <span *ngIf=\\\"this.resendTokenForm.errors\\\" class=\\\"error\\\">Please enter the Email address.</span>\\r\\n              <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"!resendTokenForm.valid\\\">Submit</button>            \\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n    </div>\\r\\n  </div>\"","module.exports = \".form {\\n  margin-bottom: 48px;\\n  text-align: center; }\\n  .form .form-element {\\n    margin-bottom: 12px; }\\n  .form .error {\\n    color: #fa1c1cf5; }\\n  .form .overlay-text {\\n    color: #fff; }\\n  .form .form-inputs {\\n    color: #737373; }\\n  .form .form-icon {\\n    background: #fff;\\n    box-shadow: 0px 0px 5px 0px;\\n    font-size: 24px;\\n    padding: 16px;\\n    z-index: 100;\\n    position: relative; }\\n  .form .form-icon p {\\n      margin-bottom: 0; }\\n  .form .form-text {\\n    padding-top: 50px;\\n    padding-bottom: 30px; }\\n  .form form {\\n    background-color: #fff;\\n    box-shadow: 0px 1px 5px 0px;\\n    padding: 24px;\\n    text-align: left;\\n    z-index: 2;\\n    position: relative; }\\n  .form form .user-type {\\n      margin-bottom: 12px; }\\n  .form form .user-type #PRO, .form form .user-type #USER {\\n        width: auto;\\n        display: inline-block;\\n        margin: 0;\\n        padding: 0; }\\n  .form form .user-type input {\\n        vertical-align: middle; }\\n  .form form .user-type label {\\n        margin-right: 48px; }\\n  .form form input {\\n      width: 100%;\\n      border-radius: 4px;\\n      border-color: rgba(54, 69, 79, 0.36);\\n      border-style: solid;\\n      border-width: 1px;\\n      font-size: .875em;\\n      padding: 7px; }\\n  .form form label, .form form p {\\n      font-size: .875em;\\n      font-weight: 600;\\n      margin-bottom: 2px; }\\n  .form form button {\\n      display: block;\\n      cursor: pointer;\\n      margin: auto;\\n      margin-top: 24px;\\n      width: 20vw; }\\n  .form-container {\\n  background: url('signup.png') no-repeat;\\n  background-size: 100% 260px;\\n  position: relative; }\\n  .overlay:before {\\n  position: absolute;\\n  content: \\\" \\\";\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 260px;\\n  display: block;\\n  z-index: 0;\\n  background-color: rgba(3, 169, 244, 0.9); }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\r\nimport { AuthenticationService } from '../../shared/services/authentication.service';\r\nimport { StateService } from '../../shared/services/state.service';\r\n\r\n@Component({\r\n  selector: 'dproz-verification',\r\n  templateUrl: './verification.component.html',\r\n  styleUrls: ['./verification.component.scss']\r\n})\r\nexport class VerificationComponent implements OnInit {\r\n\r\n  verificationForm: FormGroup;\r\n  resendTokenForm: FormGroup;\r\n  email: string;\r\n  token: string;\r\n  message: string;\r\n  errorMessage: string;\r\n  activeForm: string;\r\n  pageIntent: string;\r\n  \r\n  constructor(private router: Router, private route: ActivatedRoute, private fb: FormBuilder, private service: AuthenticationService, private state: StateService) { }\r\n  \r\n  ngOnInit() {\r\n    console.log(this.route.params, 'params');\r\n    this.route.params.subscribe(data => {\r\n      if (data.code) {\r\n        this.service.verification(this.verificationForm.get('code').value).subscribe(() => {\r\n          this.router.navigate(['../dproz/login']);\r\n        }, (error) => {\r\n          this.errorMessage = `There was an error while verifing you account. Please try again.`\r\n          console.log(error, 'Error while verification');\r\n        })\r\n      } else if (this.state.getState().userReferenceId && this.state.getState().identity.emailAddress) {\r\n        this.pageIntent = `Verify Account`\r\n        this.activeForm = 'verificationForm';\r\n        this.token = this.state.getState().userReferenceId;\r\n        this.email = this.state.getState().identity.emailAddress;\r\n      } else {\r\n        this.pageIntent = `Resend Token`\r\n        this.activeForm = 'resendTokenForm';\r\n        this.message = `Please resend token and follow the link`\r\n      }\r\n    })\r\n\r\n    this.verificationForm = this.fb.group({\r\n      code: ['', Validators.required]\r\n    })\r\n\r\n    this.resendTokenForm = this.fb.group({\r\n      emailId: ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.activeForm==='verificationForm') {\r\n      if(this.verificationForm.valid) {\r\n        this.service.verification(`${this.verificationForm.get('code').value}:${this.token}`).subscribe(() => {\r\n          this.router.navigate(['../dproz/home']); \r\n        },(error) => {\r\n          console.log(error, `Error while `);\r\n        })\r\n      }\r\n    } else if (this.activeForm==='resendTokenForm') {\r\n      if(this.resendTokenForm.valid) {\r\n        this.service.resendToken(this.resendTokenForm.get('emailId').value).subscribe(() => {\r\n          this.router.navigate(['../dproz/home']);    \r\n        },(error) => {\r\n          console.log(error, ``);\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"contact_us_style\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row contact_row_style py-5\\\">\\r\\n      <div class=\\\"col-lg \\\">\\r\\n        <h3>Contact Us</h3>\\r\\n        <div class=\\\"border_top border\\\"></div>\\r\\n       \\r\\n        <p>HomePage  &nbsp;&nbsp; /&nbsp;&nbsp; <span>Contact</span> </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"container py-5\\\">\\r\\n    <div class=\\\"row contect_colum1_style\\\">\\r\\n      <div class=\\\"col-lg-8\\\">\\r\\n        <div class=\\\"\\\">\\r\\n          <h4>Contact info</h4>\\r\\n          <p class=\\\"sub_p_style\\\">Lorem Ipsum is simply dummy text</p>\\r\\n          <div class=\\\"border_style\\\"></div>\\r\\n          <p>\\r\\n           <img src=\\\"../../assets/images/fa-map-marker-img.png\\\"><span> Address: &nbsp;</span> Lorem Ipsum is simply dummy text of \\r\\n           the  printing and typesetting \\r\\n          </p>\\r\\n          <p><img src=\\\"../../assets/images/fa-volume-control-phone-img.png\\\"><span> Tell:  &nbsp;</span>123-456-7890</p>\\r\\n          <p><img src=\\\"../../assets/images//fa-envelope-o-img.png\\\"><span> Mail:  &nbsp;</span> 123-456-7890</p> \\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-16\\\">\\r\\n         <form>\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-12 form-group\\\">\\r\\n              \\r\\n              <input class=\\\"form-control input-sm input_style\\\" id=\\\"inputsm\\\" type=\\\"text\\\" placeholder=\\\"Name\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-12 form-group\\\">\\r\\n              <input class=\\\"form-control input_style\\\" id=\\\"inputdefault\\\" type=\\\"text\\\" placeholder=\\\"Email\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n            <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg form-group\\\">\\r\\n              <textarea class=\\\"form-control \\\" rows=\\\"5\\\" id=\\\"comment\\\" placeholder=\\\"Message\\\"></textarea>\\r\\n            <div>\\r\\n              <button type=\\\"button\\\" class=\\\"button_style btn btn-link\\\">Send Message</button>\\r\\n            </div>\\r\\n            </div>\\r\\n          </div>\\r\\n         </form> \\r\\n     </div>\\r\\n    </div>\\r\\n  </div>\"","module.exports = \".contact_us_style {\\n  background-image: url('top-contect-us.png');\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  border-top: 4px solid #03a9f4;\\n  border-bottom: 4px solid #03a9f4; }\\n\\n.contact_row_style h3 {\\n  font-size: 28px;\\n  color: #fff;\\n  font-family: Myriad Pro;\\n  -webkit-font-family: Myriad Pro;\\n  font-weight: 90;\\n  font-weight: 600;\\n  text-transform: uppercase; }\\n\\n.border_top {\\n  padding: 2px;\\n  padding-bottom: 3px;\\n  background-color: #fff;\\n  width: 6%;\\n  border: none !important;\\n  margin-bottom: 10px; }\\n\\n.contact_row_style p {\\n  font-size: 14px;\\n  color: #ffffff;\\n  text-transform: uppercase;\\n  margin-top: 6px; }\\n\\n.contect_colum1_style .button_style {\\n  background: #03a9f4;\\n  color: #fff;\\n  margin-top: 26px;\\n  padding-left: 50px;\\n  padding-right: 50px;\\n  text-transform: uppercase;\\n  border-radius: 1px;\\n  text-decoration: none; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dproz-dproz-contact-us',\r\n  templateUrl: './dproz-contact-us.component.html',\r\n  styleUrls: ['./dproz-contact-us.component.scss']\r\n})\r\nexport class DprozContactUsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [HomeComponent]\r\n})\r\nexport class DprozHomeModule { }\r\n","module.exports = \"<div class=\\\"main-container\\\">\\r\\n  <div class=\\\"hero\\\">\\r\\n\\r\\n  </div>\\r\\n</div>\"","module.exports = \".hero {\\n  height: 400px;\\n  background: url('Hero.png') no-repeat;\\n  background-size: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../../shared/services/authentication.service';\r\nimport { log } from 'util';\r\n\r\n@Component({\r\n  selector: 'dproz-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private service: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n    let a = {\r\n      \"userReferenceId\": \"test\",\r\n      \"userType\": \"comsumer\",\r\n      \"firstName\": \"Va\",\r\n      \"lastName\": \"Sh\",\r\n      \"middleName\": \"middle\",\r\n      \"phone\": {\r\n        \"phoneNumber\": \"2223334567\",\r\n        \"isPrimary\": true,\r\n        \"contactMethod\": \"Mobile\"\r\n      },\r\n      \"address\": {\r\n        \"longtude\": 0,\r\n        \"latitude\": 0,\r\n        \"street\": \"string\",\r\n        \"district\": \"string\",\r\n        \"region\": \"string\",\r\n        \"country\": \"string\"\r\n      },\r\n      \"emailAddress\": \"string\",\r\n      \"password\": \"string\",\r\n      \"profilePictureUrl\": \"string\"\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n        <div   class=\\\"info_input_border\\\">\\r\\n\\r\\n          <div class=\\\"row user_row_style\\\">\\r\\n            <div class=\\\"col-lg-12 col-sm-12 col-xs-12\\\">\\r\\n              <div class=\\\"p-2\\\">\\r\\n                <h4>General Information</h4>\\r\\n              </div>\\r\\n              <div class=\\\"general_bt_br\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-12 col-sm-12 col-xs-12\\\">\\r\\n              <div class=\\\"pt-2 pb-md-4 btn_styletop\\\">\\r\\n                <ul class=\\\"info_form\\\">\\r\\n                  <li *ngIf=\\\"editForm\\\" (click)=\\\"toggleEdit()\\\">\\r\\n                    <a>\\r\\n                      <i class=\\\"fa fa-save\\\"></i>Cancel</a>\\r\\n                  </li>\\r\\n                  <li *ngIf=\\\"editForm\\\" (click)=\\\"saveForm()\\\">\\r\\n                    <a>\\r\\n                      <i class=\\\"fa fa-save\\\"></i> Save Change</a>\\r\\n                  </li>\\r\\n                  <li *ngIf=\\\"!editForm\\\" (click)=\\\"toggleEdit()\\\">\\r\\n                    <a>\\r\\n                      <i class=\\\"fa fa-pencil\\\"></i> Edit Profile</a>\\r\\n                  </li>\\r\\n                </ul>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"profile_home_bt_br\\\"></div>\\r\\n          <div class=\\\"pt-4 form_style\\\">\\r\\n            <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-xs-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-user\\\"></i>{{ editForm ? 'First' : 'User' }} Name </label>\\r\\n                <div class=\\\"col-sm-16 col-xs-16\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"text-effect\\\" [ngClass]=\\\"user.identity.firstName ? 'focus-t' : ''\\\" style=\\\"height:35px\\\">\\r\\n                      <div *ngIf=\\\"editForm\\\">\\r\\n                        <span style=\\\"padding: 5px 20px; \\\"></span>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control focus-text w-75\\\" formControlName=\\\"firstName\\\">\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"!editForm\\\" style=\\\"margin: 5px 21px\\\">\\r\\n                        {{ user.identity.firstName }} {{ user.identity.lastName }}\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div *ngIf=\\\"editForm\\\" class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-xs-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-user\\\"></i>Last Name </label>\\r\\n                <div class=\\\"col-sm-16 col-xs-16\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"text-effect\\\" style=\\\"height:35px\\\">\\r\\n                      <span style=\\\"padding: 5px 20px; \\\"></span>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control focus-text w-75\\\" formControlName=\\\"lastName\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-user\\\"></i>User Type </label>\\r\\n                <div class=\\\"col-sm-8 \\\">\\r\\n                  <div *ngIf=\\\"editForm\\\">\\r\\n                    <input type=\\\"checkbox\\\" value=\\\"\\\" class=\\\"checkbox-inline\\\" (click)=\\\"userType($event)\\\" [checked]=\\\"user.identity.userType==='PRO'\\\">Service provider\\r\\n                    <input type=\\\"checkbox\\\" value=\\\"\\\" class=\\\"checkbox-inline\\\" (click)=\\\"userType($event)\\\" [checked]=\\\"user.identity.userType==='USER'\\\">Service Coustmer\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"!editForm\\\" style=\\\"margin: 5px 21px\\\">{{ user.identity.userType }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-envelope\\\"></i>Email Address </label>\\r\\n                <div class=\\\"col-sm-16 \\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"text-effect\\\" style=\\\"height:35px\\\">\\r\\n                      <div *ngIf=\\\"editForm\\\">\\r\\n                        <span style=\\\"padding: 5px 20px; \\\"></span>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control focus-text w-75\\\" formControlName=\\\"emailAddress\\\">\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"!editForm\\\" style=\\\"margin: 5px 21px\\\">{{ user.identity.emailAddress }}</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-map-marker\\\"></i>Address </label>\\r\\n                <div class=\\\"col-sm-16\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"text-effect\\\" style=\\\"height:100%; display: block;\\\">\\r\\n                      <ng-container *ngIf=\\\"editForm\\\">\\r\\n                        <select id=\\\"state\\\" (change)=\\\"addressChange($event)\\\" class=\\\"address-select\\\">\\r\\n                          <option [value]=null style=\\\"display: none\\\">Select State</option>\\r\\n                          <option *ngFor=\\\"let state of states\\\" [value]=\\\"state._region\\\" [selected]=\\\"profileForm.getRawValue().address.region===state._region\\\">{{state._region}}</option>\\r\\n                        </select>\\r\\n                        <select id=\\\"city\\\" (change)=\\\"addressChange($event)\\\" class=\\\"address-select\\\">\\r\\n                          <option [value]=null style=\\\"display: none\\\">Select City</option>\\r\\n                          <option *ngFor=\\\"let city of cities\\\" [value]=\\\"city._city\\\" [selected]=\\\"profileForm.getRawValue().address.city===city._city\\\">{{city._city}}</option>\\r\\n                        </select>\\r\\n                        <select id=\\\"county\\\" (change)=\\\"addressChange($event)\\\" class=\\\"address-select\\\">\\r\\n                          <option [value]=null style=\\\"display: none\\\">Select County</option>\\r\\n                          <option *ngFor=\\\"let county of counties\\\" [value]=\\\"county._county\\\" [selected]=\\\"profileForm.getRawValue().address.county===county._county\\\">{{county._county}}</option>\\r\\n                        </select>\\r\\n                        <select id=\\\"street\\\" (change)=\\\"addressChange($event)\\\" class=\\\"address-select\\\">\\r\\n                          <option [value]=null style=\\\"display: none\\\">Select Street</option>\\r\\n                          <option *ngFor=\\\"let street of streets\\\" [value]=\\\"street._street\\\" [selected]=\\\"profileForm.getRawValue().address.street===street._street\\\">{{street._street}}</option>\\r\\n                        </select>\\r\\n                      </ng-container>\\r\\n                      <div *ngIf=\\\"!editForm\\\" style=\\\"margin: 5px 21px\\\">{{ user.identity.address.street }} {{ user.identity.address.city }} {{ user.identity.address.county }}</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-phone\\\"></i>Phone </label>\\r\\n                <div class=\\\"col-sm-16\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"text-effect\\\" formGroupName=\\\"phone\\\">\\r\\n                      <ng-container *ngIf=\\\"editForm\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control focus-text w-75\\\" formControlName=\\\"phoneNumber\\\">\\r\\n                      </ng-container>\\r\\n                      <div *ngIf=\\\"!editForm\\\" style=\\\"margin: 5px 21px\\\">{{ user.identity.phone?.phoneNumber }}</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-phone\\\"></i>Profile Picture</label>\\r\\n                <div class=\\\"col-sm-16\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"text-effect\\\" style=\\\"height:35px\\\">\\r\\n                      <div *ngIf=\\\"editForm\\\">\\r\\n                        <span style=\\\"padding: 5px 20px; \\\"></span>\\r\\n                        <input type=\\\"file\\\" id=\\\"avatar\\\" (change)=\\\"onFileChange($event)\\\">\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"!editForm\\\" style=\\\"margin: 5px 21px\\\">{{ user.identity?.profilePictureUrl?.url }}</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <a style=\\\"padding: 5px 35px;\\\" routerLink=\\\"../password\\\" routerLinkActive=\\\"active-link\\\">Change Password</a>\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n\"","module.exports = \".user_us_style {\\n  background: #03a9f4; }\\n\\n.contact_row_style p {\\n  font-size: 14px;\\n  color: #ffffff;\\n  text-transform: uppercase;\\n  margin-top: 6px; }\\n\\n.profile_home_col_5 {\\n  /* border: 1px solid #c7c7c7; */\\n  text-align: center;\\n  padding: 10px;\\n  box-shadow: 0px 1px 6px 0px #e0e0e0;\\n  border-radius: 3px;\\n  padding-bottom: 43px; }\\n\\nimg {\\n  vertical-align: middle;\\n  border-style: none; }\\n\\n.text-uppercase {\\n  text-transform: uppercase !important; }\\n\\n.profile_home_p {\\n  color: #03a9f4; }\\n\\n.info_input_border {\\n  /* border: 1px solid #c7c7c7; */\\n  box-shadow: 0px 1px 6px 0px #e0e0e0;\\n  border-radius: 2px;\\n  width: 90%;\\n  margin: 20px auto; }\\n\\n.form_style {\\n  overflow: hidden;\\n  padding-bottom: 20px;\\n  font-size: 14px; }\\n\\n.form-group {\\n  margin-bottom: 0; }\\n\\n.info_input {\\n  padding: 12px 10px; }\\n\\n.col-form-label {\\n  padding-top: calc(.375rem + 1px);\\n  padding-bottom: calc(.375rem + 1px);\\n  margin-bottom: 0;\\n  font-size: inherit;\\n  line-height: 1.5; }\\n\\n.fa {\\n  display: inline-block;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: inherit;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale; }\\n\\n.info_input i {\\n  padding: 0 10px; }\\n\\n.text-effect {\\n  position: relative;\\n  height: 70px; }\\n\\n.text-effect span {\\n  bottom: 3px;\\n  position: absolute;\\n  z-index: 1; }\\n\\n.text-effect input {\\n  border: none;\\n  border-bottom: 1px solid #073951 !important;\\n  border-radius: 0;\\n  position: absolute;\\n  bottom: 0;\\n  border-style: none none solid;\\n  border-width: 0 0 2px;\\n  box-shadow: none;\\n  z-index: 2;\\n  background-color: transparent; }\\n\\n.info_input input {\\n  border: none;\\n  margin: 5px 21px;\\n  border-bottom: 1px solid grey;\\n  transition: 0.6s; }\\n\\n.form_style input {\\n  font-size: 14px; }\\n\\n.form-control {\\n  display: block;\\n  width: 100%;\\n  padding: .375rem .75rem;\\n  font-size: 1rem;\\n  line-height: 1.5;\\n  color: #495057;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 1px solid #ced4da;\\n  border-radius: .25rem;\\n  transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out; }\\n\\n.info_input :hover, input:focus {\\n  color: #000000;\\n  border-color: #03a9f4; }\\n\\n.text-effect {\\n  position: relative;\\n  height: 70px;\\n  height: 35px;\\n  display: flex;\\n  align-items: center; }\\n\\n.focus-t span {\\n  bottom: 36px !important;\\n  color: #0971a2;\\n  font-size: 15px;\\n  transition: all 0.3s ease 0s;\\n  z-index: 1; }\\n\\ninput[type=checkbox], input[type=radio] {\\n  box-sizing: border-box;\\n  padding: 0; }\\n\\n.general_bt_br {\\n  border-bottom: 3px solid #04a9f3;\\n  width: 75%;\\n  margin: 3px 0; }\\n\\n.info_form li {\\n  list-style: none;\\n  float: right;\\n  border: 1px solid grey;\\n  border-radius: 60px;\\n  padding: 6px 8px;\\n  margin: 4px 4px;\\n  font-size: 13px;\\n  color: #007bff;\\n  cursor: pointer; }\\n\\n.fa {\\n  display: inline-block;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: inherit;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale; }\\n\\n.address-select {\\n  display: block;\\n  padding: 6px;\\n  width: 100%;\\n  margin-bottom: 12px; }\\n\"","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { StateService } from '../shared/services/state.service';\r\nimport { AuthenticationService } from '../shared/services/authentication.service';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { PlacesService } from '../shared/services/places.service';\r\nimport * as isEmail from 'isemail';\r\nimport { UserService } from '../shared/services/user.service';\r\nimport { DocumentService } from '../shared/services/document.service';\r\n\r\n@Component({\r\n  selector: 'dproz-prof-profile',\r\n  templateUrl: './dproz-prof-profile.component.html',\r\n  styleUrls: ['./dproz-prof-profile.component.scss']\r\n})\r\nexport class DprozProfProfileComponent implements OnInit {\r\n\r\n  user: any;\r\n  editForm = false;\r\n  profileForm: FormGroup;\r\n  selectedState: any;\r\n  cities: any;\r\n  selectedCity: any;\r\n  counties: any;\r\n  selectedCounty: any;\r\n  streets: any;\r\n  states: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private state: StateService,\r\n    private service: AuthenticationService,\r\n    private placesService: PlacesService,\r\n    private userService: UserService,\r\n    private docService: DocumentService\r\n  ) { }\r\n  @ViewChild('myname') input;\r\n\r\n  ngOnInit() {\r\n\r\n    this.profileForm = this.fb.group({\r\n      userType: ['', Validators.required],\r\n      firstName: ['', [Validators.required, Validators.minLength(2)]],\r\n      lastName: ['', [Validators.required, Validators.minLength(2)]],\r\n      middleName: '',\r\n      emailAddress: ['', Validators.required],\r\n      phone: this.fb.group({\r\n        phoneNumber: '',\r\n        primary: true,\r\n        contactMethod: 'CALL'\r\n      }),\r\n      address: this.fb.group({\r\n        longitude: [0, [this.requiredValidator.bind(this)]],\r\n        latitude: [0, this.requiredValidator.bind(this)],\r\n        street: ['', this.requiredValidator.bind(this)],\r\n        city: ['', this.requiredValidator.bind(this)],\r\n        county: ['', this.requiredValidator.bind(this)],\r\n        region: ['', this.requiredValidator.bind(this)],\r\n        country: ['', this.requiredValidator.bind(this)],\r\n        postcode: ['', this.requiredValidator.bind(this)],\r\n        timezone: ['', this.requiredValidator.bind(this)]\r\n      })\r\n    });\r\n\r\n    this.placesService.getRegions().subscribe(regions => {\r\n      this.states = regions;\r\n      // console.log(this.states);\r\n\r\n    });\r\n\r\n    this.state.user.subscribe(u => {\r\n      this.user = u;\r\n      // console.log(u);\r\n      if (this.user.identity)\r\n        this.profileForm.patchValue(this.user.identity);\r\n\r\n      if (this.user.identity && this.user.identity.address) {\r\n\r\n      }\r\n      // console.log(this.profileForm.getRawValue());\r\n\r\n    });\r\n\r\n  }\r\n\r\n  onFileChange(event) {\r\n    if (event.target.files.length > 0) {\r\n      let file = event.target.files[0];\r\n      this.docService.postDocument(file, this.user.identity.userReferenceId, 'PHOTO_ID', 'thumbnail', 'true').subscribe(d => {\r\n        console.log(d);\r\n        \r\n      });\r\n    }\r\n  }\r\n\r\n  focus(e) {\r\n    e.target.parentElement.classList.add('focus-t');\r\n    console.log(e);\r\n\r\n  }\r\n\r\n  blur(e) {\r\n    e.target.parentElement.classList.remove('focus-t');\r\n    console.log(e);\r\n\r\n  }\r\n\r\n  toggleEdit() {\r\n    this.editForm = !this.editForm;\r\n    console.log(this.state.getState().identity);\r\n\r\n    if (this.editForm) {\r\n      this.profileForm.get('address').patchValue(this.state.getState().identity.address);\r\n      console.log(this.profileForm.getRawValue());\r\n      const {region, county, city} = this.profileForm.getRawValue().address;\r\n      this.selectedCity = city;\r\n      this.selectedCounty = county;\r\n      this.selectedState = region;\r\n      if (this.profileForm.get('address').value.city) {\r\n        this.placesService.getCities(region).subscribe(cities => {\r\n          this.cities = cities;          \r\n          console.log(this.state.getState().identity.address.region);\r\n          if (this.profileForm.get('address').value.county) {\r\n            this.placesService.getCounties(region, city).subscribe(counties => {\r\n              this.counties = counties;\r\n              if (this.profileForm.get('address').value.street) {\r\n                this.placesService.getStreets(region, city, county).subscribe(streets => {\r\n                  this.streets = streets;\r\n                  \r\n                })\r\n              }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n  saveForm() {\r\n    this.onSubmit();\r\n  }\r\n\r\n  requiredValidator(c) {\r\n    return (this.user === 'PRO' && !c.value) ? { required: true } : null;\r\n  }\r\n\r\n\r\n  addressChange(e) {\r\n    if (e.target.id === 'state') {\r\n      this.selectedState = e.target.value;\r\n      this.profileForm.get('address').get('region').setValue(null);\r\n      this.profileForm.get('address').get('county').setValue(null);\r\n      this.profileForm.get('address').get('street').setValue(null);\r\n      this.placesService.getCities(this.selectedState).subscribe(cities => {\r\n        this.cities = cities;\r\n      })\r\n    } else if (e.target.id === 'city') {\r\n      this.profileForm.get('address').get('county').setValue(null);\r\n      this.profileForm.get('address').get('street').setValue(null);\r\n      this.selectedCity = e.target.value\r\n      this.placesService.getCounties(this.selectedState, this.selectedCity).subscribe(counties => {\r\n        this.counties = counties;\r\n      })\r\n    } else if (e.target.id === 'county') {\r\n      this.profileForm.get('address').get('street').setValue(null);\r\n      this.selectedCounty = e.target.value;\r\n      this.placesService.getStreets(this.selectedState, this.selectedCity, this.selectedCounty).subscribe(streets => {\r\n        this.streets = streets;\r\n      })\r\n    } else if (e.target.id === 'street') {\r\n      let addressSelected: any = this.streets.find(el => el._street === e.target.value && el._county === this.selectedCounty);\r\n\r\n      this.profileForm.patchValue({\r\n        address: {\r\n          longitude: addressSelected._longitude,\r\n          latitude: addressSelected._latitude,\r\n          street: addressSelected._street,\r\n          city: addressSelected._city,\r\n          county: addressSelected._county,\r\n          postcode: addressSelected._postcode,\r\n          region: addressSelected._region,\r\n          country: addressSelected._country,\r\n          timezone: addressSelected._timezone\r\n        }\r\n      });\r\n      console.log(this.profileForm.get('address'));\r\n    }\r\n  }\r\n\r\n  userType(e) {\r\n\r\n    this.user = e.target.id;\r\n    let { checked } = e.target;\r\n    if (checked)\r\n      this.profileForm.get('userType').setValue(this.user);\r\n    else\r\n      this.profileForm.get('userType').setValue('');\r\n  }\r\n\r\n  onSubmit() {\r\n    // this.profileForm.disable();\r\n    if (!isEmail.validate(this.profileForm.get('emailAddress').value))\r\n      this.profileForm.get('emailAddress').setErrors({ invalidEmail: 'error' });\r\n\r\n    if (this.profileForm.valid) {\r\n      let form = this.profileForm.getRawValue();\r\n      // if (form.userType === 'USER') {f\r\n      // }\r\n      this.userService.updateprofile(this.state.getState().userReferenceId, form).subscribe((data) => {\r\n        window.sessionStorage.setItem('encoded', window.btoa(this.profileForm.get('emailAddress').value));\r\n        this.state.setIdentity(form);\r\n        this.toggleEdit();\r\n      }, error => {\r\n        this.toggleEdit();\r\n        console.log(error, `Error!!!!`)\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [ProfileComponent]\r\n})\r\nexport class DprozProfileModule { }\r\n","module.exports = \"<div class=\\\"user_us_style\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row contact_row_style py-3 pt-3\\\">\\r\\n      <div class=\\\"col-lg \\\">\\r\\n        <br>\\r\\n        <p>HomePage &nbsp;&nbsp; /&nbsp;&nbsp;\\r\\n          <span>User Profile</span>\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"user.identity\\\" class=\\\"pricing-header  py-3 pt-md-5 pb-md-4 profile_home\\\">\\r\\n  <div class=\\\"container px-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-10 col-sm-24 col-xs-24 user_row_style \\\">\\r\\n        <div class=\\\"profile_home_col_5\\\">\\r\\n          <img src=\\\"../../../assets/images/prfilimg1.png\\\">\\r\\n          <h4 class=\\\"text-uppercase pt-3\\\">{{ user.identity.firstName }} {{ user.identity.lastName }}</h4>\\r\\n          <p class=\\\"profile_home_p\\\">Lorem Ipsum is simply dummy text</p>\\r\\n          <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's\\r\\n            standard dummy text ever since the 1500s, when an unknown printer took a galley</p>\\r\\n          <div>\\r\\n            <a href=\\\"#\\\">\\r\\n              <img src=\\\"../../../assets/images/User-Profile_Dproz_03.png\\\">\\r\\n            </a>\\r\\n            <a href=\\\"#\\\">\\r\\n              <img src=\\\"../../../assets/images/User-Profile_Dproz_05.png\\\">\\r\\n            </a>\\r\\n            <a href=\\\"#\\\">\\r\\n              <img src=\\\"../../../assets/images/User-Profile_Dproz_07.png\\\">\\r\\n            </a>\\r\\n            <a href=\\\"#\\\">\\r\\n              <img src=\\\"../../../assets/images/User-Profile_Dproz_09.png\\\">\\r\\n            </a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-lg-14 col-sm-24 col-xs-24 user_row_style\\\">\\r\\n        <div class=\\\"info_input_border\\\">\\r\\n\\r\\n          <div class=\\\"row user_row_style\\\">\\r\\n            <div class=\\\"col-lg-12 col-sm-12 col-xs-12\\\">\\r\\n              <div class=\\\"p-2\\\">\\r\\n                <h4>General Information</h4>\\r\\n              </div>\\r\\n              <div class=\\\"general_bt_br\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-12 col-sm-12 col-xs-12\\\">\\r\\n              <div class=\\\"pt-2 pb-md-4 btn_styletop\\\">\\r\\n                <ul class=\\\"info_form\\\">\\r\\n                  <li *ngIf=\\\"editForm\\\" (click)=\\\"toggleEdit()\\\">\\r\\n                    <a>\\r\\n                      <i class=\\\"fa fa-save\\\"></i>Cancel</a>\\r\\n                  </li>\\r\\n                  <li *ngIf=\\\"editForm\\\" (click)=\\\"saveForm()\\\">\\r\\n                    <a>\\r\\n                      <i class=\\\"fa fa-save\\\"></i> Save Change</a>\\r\\n                  </li>\\r\\n                  <li *ngIf=\\\"!editForm\\\" (click)=\\\"toggleEdit()\\\">\\r\\n                    <a>\\r\\n                      <i class=\\\"fa fa-pencil\\\"></i> Edit Profile</a>\\r\\n                  </li>\\r\\n                </ul>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"profile_home_bt_br\\\"></div>\\r\\n          <div class=\\\"pt-4 form_style\\\">\\r\\n            <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-xs-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-user\\\"></i>{{ editForm ? 'First' : 'User' }} Name </label>\\r\\n                <div class=\\\"col-sm-16 col-xs-16\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"text-effect\\\" [ngClass]=\\\"user.identity.firstName ? 'focus-t' : ''\\\" style=\\\"height:35px\\\">\\r\\n                      <div *ngIf=\\\"editForm\\\">\\r\\n                        <span style=\\\"padding: 5px 20px; \\\"></span>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control focus-text w-75\\\" formControlName=\\\"firstName\\\">\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"!editForm\\\" style=\\\"margin: 5px 21px\\\">\\r\\n                        {{ user.identity.firstName }} {{ user.identity.lastName }}\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div *ngIf=\\\"editForm\\\" class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-xs-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-user\\\"></i>Last Name </label>\\r\\n                <div class=\\\"col-sm-16 col-xs-16\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"text-effect\\\" style=\\\"height:35px\\\">\\r\\n                      <span style=\\\"padding: 5px 20px; \\\"></span>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control focus-text w-75\\\" formControlName=\\\"lastName\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-user\\\"></i>User Type </label>\\r\\n                <div class=\\\"col-sm-8 \\\">\\r\\n                  <div *ngIf=\\\"editForm\\\">\\r\\n                    <input type=\\\"checkbox\\\" value=\\\"\\\" class=\\\"checkbox-inline\\\" (click)=\\\"userType($event)\\\" [checked]=\\\"user.identity.userType==='PRO'\\\">Service provider\\r\\n                    <input type=\\\"checkbox\\\" value=\\\"\\\" class=\\\"checkbox-inline\\\" (click)=\\\"userType($event)\\\" [checked]=\\\"user.identity.userType==='USER'\\\">Service Coustmer\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"!editForm\\\" style=\\\"margin: 5px 21px\\\">{{ user.identity.userType }}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-envelope\\\"></i>Email Address </label>\\r\\n                <div class=\\\"col-sm-16 \\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"text-effect\\\" style=\\\"height:35px\\\">\\r\\n                      <div *ngIf=\\\"editForm\\\">\\r\\n                        <span style=\\\"padding: 5px 20px; \\\"></span>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control focus-text w-75\\\" formControlName=\\\"emailAddress\\\">\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"!editForm\\\" style=\\\"margin: 5px 21px\\\">{{ user.identity.emailAddress }}</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-map-marker\\\"></i>Address </label>\\r\\n                <div class=\\\"col-sm-16\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"text-effect\\\" style=\\\"height:100%; display: block;\\\">\\r\\n                      <ng-container *ngIf=\\\"editForm\\\">\\r\\n                        <select id=\\\"state\\\" (change)=\\\"addressChange($event)\\\" class=\\\"address-select\\\">\\r\\n                          <option [value]=null style=\\\"display: none\\\">Select State</option>\\r\\n                          <option *ngFor=\\\"let state of states\\\" [value]=\\\"state._region\\\" [selected]=\\\"profileForm.getRawValue().address.region===state._region\\\">{{state._region}}</option>\\r\\n                        </select>\\r\\n                        <select id=\\\"city\\\" (change)=\\\"addressChange($event)\\\" class=\\\"address-select\\\">\\r\\n                          <option [value]=null style=\\\"display: none\\\">Select City</option>\\r\\n                          <option *ngFor=\\\"let city of cities\\\" [value]=\\\"city._city\\\" [selected]=\\\"profileForm.getRawValue().address.city===city._city\\\">{{city._city}}</option>\\r\\n                        </select>\\r\\n                        <select id=\\\"county\\\" (change)=\\\"addressChange($event)\\\" class=\\\"address-select\\\">\\r\\n                          <option [value]=null style=\\\"display: none\\\">Select County</option>\\r\\n                          <option *ngFor=\\\"let county of counties\\\" [value]=\\\"county._county\\\" [selected]=\\\"profileForm.getRawValue().address.county===county._county\\\">{{county._county}}</option>\\r\\n                        </select>\\r\\n                        <select id=\\\"street\\\" (change)=\\\"addressChange($event)\\\" class=\\\"address-select\\\">\\r\\n                          <option [value]=null style=\\\"display: none\\\">Select Street</option>\\r\\n                          <option *ngFor=\\\"let street of streets\\\" [value]=\\\"street._street\\\" [selected]=\\\"profileForm.getRawValue().address.street===street._street\\\">{{street._street}}</option>\\r\\n                        </select>\\r\\n                      </ng-container>\\r\\n                      <div *ngIf=\\\"!editForm\\\" style=\\\"margin: 5px 21px\\\">{{ user.identity.address.street }} {{ user.identity.address.city }} {{ user.identity.address.county }}</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-phone\\\"></i>Phone </label>\\r\\n                <div class=\\\"col-sm-16\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"text-effect\\\" formGroupName=\\\"phone\\\">\\r\\n                      <ng-container *ngIf=\\\"editForm\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control focus-text w-75\\\" formControlName=\\\"phoneNumber\\\">\\r\\n                      </ng-container>\\r\\n                      <div *ngIf=\\\"!editForm\\\" style=\\\"margin: 5px 21px\\\">{{ user.identity.phone?.phoneNumber }}</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-8 col-form-label\\\">\\r\\n                  <i class=\\\"fa fa-phone\\\"></i>Profile Picture</label>\\r\\n                <div class=\\\"col-sm-16\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"text-effect\\\" style=\\\"height:35px\\\">\\r\\n                      <div *ngIf=\\\"editForm\\\">\\r\\n                        <span style=\\\"padding: 5px 20px; \\\"></span>\\r\\n                        <input type=\\\"file\\\" id=\\\"avatar\\\" (change)=\\\"onFileChange($event)\\\">\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"!editForm\\\" style=\\\"margin: 5px 21px\\\">{{ user.identity?.profilePictureUrl?.url }}</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row info_input\\\">\\r\\n                <a style=\\\"padding: 5px 35px;\\\" routerLink=\\\"../password\\\" routerLinkActive=\\\"active-link\\\">Change Password</a>\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".user_us_style {\\n  background: #03a9f4; }\\n\\n.contact_row_style p {\\n  font-size: 14px;\\n  color: #ffffff;\\n  text-transform: uppercase;\\n  margin-top: 6px; }\\n\\n.profile_home_col_5 {\\n  /* border: 1px solid #c7c7c7; */\\n  text-align: center;\\n  padding: 10px;\\n  box-shadow: 0px 1px 6px 0px #e0e0e0;\\n  border-radius: 3px;\\n  padding-bottom: 43px; }\\n\\nimg {\\n  vertical-align: middle;\\n  border-style: none; }\\n\\n.text-uppercase {\\n  text-transform: uppercase !important; }\\n\\n.profile_home_p {\\n  color: #03a9f4; }\\n\\n.info_input_border {\\n  /* border: 1px solid #c7c7c7; */\\n  box-shadow: 0px 1px 6px 0px #e0e0e0;\\n  border-radius: 2px; }\\n\\n.form_style {\\n  overflow: hidden;\\n  padding-bottom: 20px;\\n  font-size: 14px; }\\n\\n.form-group {\\n  margin-bottom: 0; }\\n\\n.info_input {\\n  padding: 12px 10px; }\\n\\n.col-form-label {\\n  padding-top: calc(.375rem + 1px);\\n  padding-bottom: calc(.375rem + 1px);\\n  margin-bottom: 0;\\n  font-size: inherit;\\n  line-height: 1.5; }\\n\\n.fa {\\n  display: inline-block;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: inherit;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale; }\\n\\n.info_input i {\\n  padding: 0 10px; }\\n\\n.text-effect {\\n  position: relative;\\n  height: 70px; }\\n\\n.text-effect span {\\n  bottom: 3px;\\n  position: absolute;\\n  z-index: 1; }\\n\\n.text-effect input {\\n  border: none;\\n  border-bottom: 1px solid #073951 !important;\\n  border-radius: 0;\\n  position: absolute;\\n  bottom: 0;\\n  border-style: none none solid;\\n  border-width: 0 0 2px;\\n  box-shadow: none;\\n  z-index: 2;\\n  background-color: transparent; }\\n\\n.info_input input {\\n  border: none;\\n  margin: 5px 21px;\\n  border-bottom: 1px solid grey;\\n  transition: 0.6s; }\\n\\n.form_style input {\\n  font-size: 14px; }\\n\\n.form-control {\\n  display: block;\\n  width: 100%;\\n  padding: .375rem .75rem;\\n  font-size: 1rem;\\n  line-height: 1.5;\\n  color: #495057;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 1px solid #ced4da;\\n  border-radius: .25rem;\\n  transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out; }\\n\\n.info_input :hover, input:focus {\\n  color: #000000;\\n  border-color: #03a9f4; }\\n\\n.text-effect {\\n  position: relative;\\n  height: 70px;\\n  height: 35px;\\n  display: flex;\\n  align-items: center; }\\n\\n.focus-t span {\\n  bottom: 36px !important;\\n  color: #0971a2;\\n  font-size: 15px;\\n  transition: all 0.3s ease 0s;\\n  z-index: 1; }\\n\\ninput[type=checkbox], input[type=radio] {\\n  box-sizing: border-box;\\n  padding: 0; }\\n\\n.general_bt_br {\\n  border-bottom: 3px solid #04a9f3;\\n  width: 75%;\\n  margin: 3px 0; }\\n\\n.info_form li {\\n  list-style: none;\\n  float: right;\\n  border: 1px solid grey;\\n  border-radius: 60px;\\n  padding: 6px 8px;\\n  margin: 4px 4px;\\n  font-size: 13px;\\n  color: #007bff;\\n  cursor: pointer; }\\n\\n.fa {\\n  display: inline-block;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: inherit;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale; }\\n\\n.address-select {\\n  display: block;\\n  padding: 6px;\\n  width: 100%;\\n  margin-bottom: 12px; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { StateService } from '../../shared/services/state.service';\r\nimport { AuthenticationService } from '../../shared/services/authentication.service';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { PlacesService } from '../../shared/services/places.service';\r\nimport * as isEmail from 'isemail';\r\nimport { UserService } from '../../shared/services/user.service';\r\nimport { DocumentService } from '../../shared/services/document.service';\r\n\r\n@Component({\r\n  selector: 'dproz-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  user: any;\r\n  editForm = false;\r\n  profileForm: FormGroup;\r\n  selectedState: any;\r\n  cities: any;\r\n  selectedCity: any;\r\n  counties: any;\r\n  selectedCounty: any;\r\n  streets: any;\r\n  states: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private state: StateService,\r\n    private service: AuthenticationService,\r\n    private placesService: PlacesService,\r\n    private userService: UserService,\r\n    private docService: DocumentService\r\n  ) { }\r\n  @ViewChild('myname') input;\r\n\r\n  ngOnInit() {\r\n\r\n    this.profileForm = this.fb.group({\r\n      userType: ['', Validators.required],\r\n      firstName: ['', [Validators.required, Validators.minLength(2)]],\r\n      lastName: ['', [Validators.required, Validators.minLength(2)]],\r\n      middleName: '',\r\n      emailAddress: ['', Validators.required],\r\n      phone: this.fb.group({\r\n        phoneNumber: '',\r\n        primary: true,\r\n        contactMethod: 'CALL'\r\n      }),\r\n      address: this.fb.group({\r\n        longitude: [0, [this.requiredValidator.bind(this)]],\r\n        latitude: [0, this.requiredValidator.bind(this)],\r\n        street: ['', this.requiredValidator.bind(this)],\r\n        city: ['', this.requiredValidator.bind(this)],\r\n        county: ['', this.requiredValidator.bind(this)],\r\n        region: ['', this.requiredValidator.bind(this)],\r\n        country: ['', this.requiredValidator.bind(this)],\r\n        postcode: ['', this.requiredValidator.bind(this)],\r\n        timezone: ['', this.requiredValidator.bind(this)]\r\n      })\r\n    });\r\n\r\n    this.placesService.getRegions().subscribe(regions => {\r\n      this.states = regions;\r\n      // console.log(this.states);\r\n\r\n    });\r\n\r\n    this.state.user.subscribe(u => {\r\n      this.user = u;\r\n      // console.log(u);\r\n      if (this.user.identity)\r\n        this.profileForm.patchValue(this.user.identity);\r\n\r\n      if (this.user.identity && this.user.identity.address) {\r\n\r\n      }\r\n      // console.log(this.profileForm.getRawValue());\r\n\r\n    });\r\n\r\n  }\r\n\r\n  onFileChange(event) {\r\n    if (event.target.files.length > 0) {\r\n      let file = event.target.files[0];\r\n      this.docService.postDocument(file, this.user.identity.userReferenceId, 'PHOTO_ID', 'thumbnail', 'true').subscribe(d => {\r\n        console.log(d);\r\n        \r\n      });\r\n    }\r\n  }\r\n\r\n  focus(e) {\r\n    e.target.parentElement.classList.add('focus-t');\r\n    console.log(e);\r\n\r\n  }\r\n\r\n  blur(e) {\r\n    e.target.parentElement.classList.remove('focus-t');\r\n    console.log(e);\r\n\r\n  }\r\n\r\n  toggleEdit() {\r\n    this.editForm = !this.editForm;\r\n    console.log(this.state.getState().identity);\r\n\r\n    if (this.editForm) {\r\n      this.profileForm.get('address').patchValue(this.state.getState().identity.address);\r\n      console.log(this.profileForm.getRawValue());\r\n      const {region, county, city} = this.profileForm.getRawValue().address;\r\n      this.selectedCity = city;\r\n      this.selectedCounty = county;\r\n      this.selectedState = region;\r\n      if (this.profileForm.get('address').value.city) {\r\n        this.placesService.getCities(region).subscribe(cities => {\r\n          this.cities = cities;          \r\n          console.log(this.state.getState().identity.address.region);\r\n          if (this.profileForm.get('address').value.county) {\r\n            this.placesService.getCounties(region, city).subscribe(counties => {\r\n              this.counties = counties;\r\n              if (this.profileForm.get('address').value.street) {\r\n                this.placesService.getStreets(region, city, county).subscribe(streets => {\r\n                  this.streets = streets;\r\n                  \r\n                })\r\n              }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n  saveForm() {\r\n    this.onSubmit();\r\n  }\r\n\r\n  requiredValidator(c) {\r\n    return (this.user === 'PRO' && !c.value) ? { required: true } : null;\r\n  }\r\n\r\n\r\n  addressChange(e) {\r\n    if (e.target.id === 'state') {\r\n      this.selectedState = e.target.value;\r\n      this.profileForm.get('address').get('region').setValue(null);\r\n      this.profileForm.get('address').get('county').setValue(null);\r\n      this.profileForm.get('address').get('street').setValue(null);\r\n      this.placesService.getCities(this.selectedState).subscribe(cities => {\r\n        this.cities = cities;\r\n      })\r\n    } else if (e.target.id === 'city') {\r\n      this.profileForm.get('address').get('county').setValue(null);\r\n      this.profileForm.get('address').get('street').setValue(null);\r\n      this.selectedCity = e.target.value\r\n      this.placesService.getCounties(this.selectedState, this.selectedCity).subscribe(counties => {\r\n        this.counties = counties;\r\n      })\r\n    } else if (e.target.id === 'county') {\r\n      this.profileForm.get('address').get('street').setValue(null);\r\n      this.selectedCounty = e.target.value;\r\n      this.placesService.getStreets(this.selectedState, this.selectedCity, this.selectedCounty).subscribe(streets => {\r\n        this.streets = streets;\r\n      })\r\n    } else if (e.target.id === 'street') {\r\n      let addressSelected: any = this.streets.find(el => el._street === e.target.value && el._county === this.selectedCounty);\r\n\r\n      this.profileForm.patchValue({\r\n        address: {\r\n          longitude: addressSelected._longitude,\r\n          latitude: addressSelected._latitude,\r\n          street: addressSelected._street,\r\n          city: addressSelected._city,\r\n          county: addressSelected._county,\r\n          postcode: addressSelected._postcode,\r\n          region: addressSelected._region,\r\n          country: addressSelected._country,\r\n          timezone: addressSelected._timezone\r\n        }\r\n      });\r\n      console.log(this.profileForm.get('address'));\r\n    }\r\n  }\r\n\r\n  userType(e) {\r\n\r\n    this.user = e.target.id;\r\n    let { checked } = e.target;\r\n    if (checked)\r\n      this.profileForm.get('userType').setValue(this.user);\r\n    else\r\n      this.profileForm.get('userType').setValue('');\r\n  }\r\n\r\n  onSubmit() {\r\n    // this.profileForm.disable();\r\n    if (!isEmail.validate(this.profileForm.get('emailAddress').value))\r\n      this.profileForm.get('emailAddress').setErrors({ invalidEmail: 'error' });\r\n\r\n    if (this.profileForm.valid) {\r\n      let form = this.profileForm.getRawValue();\r\n      // if (form.userType === 'USER') {f\r\n      // }\r\n      this.userService.updateprofile(this.state.getState().userReferenceId, form).subscribe((data) => {\r\n        window.sessionStorage.setItem('encoded', window.btoa(this.profileForm.get('emailAddress').value));\r\n        this.state.setIdentity(form);\r\n        this.toggleEdit();\r\n      }, error => {\r\n        this.toggleEdit();\r\n        console.log(error, `Error!!!!`)\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dproz-dproz-main',\r\n  templateUrl: './dproz-main.component.html',\r\n  styleUrls: ['./dproz-main.component.scss']\r\n})\r\nexport class DprozMainComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DprozMainComponent } from './dproz-main/dproz-main.component';\r\nimport { DprozHomeModule } from '../dproz-home/dproz-home.module';\r\nimport { DprozAuthenticationModule } from '../dproz-authentication/dproz-authentication.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { DprozProfileModule } from '../dproz-profile/dproz-profile.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DprozHomeModule,\r\n    DprozProfileModule,\r\n    DprozAuthenticationModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [DprozMainComponent]\r\n})\r\nexport class DprozModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class ServiceModule { }\r\n","module.exports = \"\\r\\n\\r\\n<button mat-raised-button (click)=\\\"isLinear = !isLinear\\\" id=\\\"toggle-linear\\\">\\r\\n    {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\\r\\n  </button>\\r\\n  <mat-horizontal-stepper [linear]=\\\"isLinear\\\" #stepper>\\r\\n    <mat-step [stepControl]=\\\"firstFormGroup\\\">\\r\\n      <form [formGroup]=\\\"firstFormGroup\\\">\\r\\n        <ng-template matStepLabel>Fill out your Details</ng-template>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\r\\n        </mat-form-field>\\r\\n        <div>\\r\\n          <button mat-button matStepperNext>Next</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-step>\\r\\n    <mat-step [stepControl]=\\\"secondFormGroup\\\">\\r\\n      <form [formGroup]=\\\"secondFormGroup\\\">\\r\\n        <ng-template matStepLabel>Fill out your address</ng-template>\\r\\n        <mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\r\\n            <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodePadding>\\r\\n              <button mat-icon-button disabled></button>\\r\\n              <a href=\\\"\\\">{{node.item}}</a>\\r\\n            </mat-tree-node>\\r\\n            <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding>\\r\\n              <button mat-icon-button\\r\\n                      [attr.aria-label]=\\\"'toggle ' + node.filename\\\" matTreeNodeToggle>\\r\\n                <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\r\\n                  <!-- {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}} -->\\r\\n                </mat-icon>\\r\\n              </button>\\r\\n              {{node.item}}\\r\\n              <mat-progress-bar *ngIf=\\\"node.isLoading\\\"\\r\\n                                mode=\\\"indeterminate\\\"\\r\\n                                class=\\\"example-tree-progress-bar\\\"></mat-progress-bar>\\r\\n            </mat-tree-node>\\r\\n          </mat-tree>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\r\\n        </mat-form-field>\\r\\n        <div>\\r\\n          <button mat-button matStepperPrevious>Back</button>\\r\\n          <button mat-button matStepperNext>Next</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-step>\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>Done</ng-template>\\r\\n      You are now done.\\r\\n      <div>\\r\\n        <button mat-button matStepperPrevious>Back</button>\\r\\n        <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\r\\n        <button mat-button (click)=\\\"stepper.reset()\\\">Submit</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n  </mat-horizontal-stepper>\\r\\n    \\r\\n\\r\\n  \\r\\n\\r\\n\"","module.exports = \".example-tree-progress-bar {\\n  margin-left: 30px; }\\n\"","import { Component,Injectable, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {CollectionViewer, SelectionChange} from '@angular/cdk/collections';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n/** Flat node with expandable and level information */\r\nexport class DynamicFlatNode {\r\n  constructor(public item: string, public level = 1, public expandable = false,\r\n              public isLoading = false) {}\r\n}\r\n\r\n\r\nexport class DynamicDatabase {\r\n  dataMap = new Map<string, string[]>([\r\n    ['Fruits', ['Apple', 'Orange', 'Banana']],\r\n    ['Vegetables', ['Tomato', 'Potato', 'Onion']],\r\n    ['Apple', ['Fuji', 'Macintosh']],\r\n    ['Onion', ['Yellow', 'White', 'Purple']]\r\n  ]);\r\n\r\n  rootLevelNodes: string[] = ['Fruits', 'Vegetables'];\r\n\r\n  /** Initial data from database */\r\n  initialData(): DynamicFlatNode[] {\r\n    return this.rootLevelNodes.map(name => new DynamicFlatNode(name, 0, true));\r\n  }\r\n\r\n  getChildren(node: string): string[] | undefined {\r\n    return this.dataMap.get(node);\r\n  }\r\n\r\n  isExpandable(node: string): boolean {\r\n    return this.dataMap.has(node);\r\n  }\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class DynamicDataSource {\r\n\r\n  dataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\r\n\r\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\r\n  set data(value: DynamicFlatNode[]) {\r\n    this.treeControl.dataNodes = value;\r\n    this.dataChange.next(value);\r\n  }\r\n\r\n  constructor(private treeControl: FlatTreeControl<DynamicFlatNode>,\r\n              private database: DynamicDatabase) {}\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\r\n    this.treeControl.expansionModel.onChange!.subscribe(change => {\r\n      if ((change as SelectionChange<DynamicFlatNode>).added ||\r\n        (change as SelectionChange<DynamicFlatNode>).removed) {\r\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\r\n      }\r\n    });\r\n\r\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\r\n  }\r\n\r\n  /** Handle expand/collapse behaviors */\r\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\r\n    if (change.added) {\r\n      change.added.forEach(node => this.toggleNode(node, true));\r\n    }\r\n    if (change.removed) {\r\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle the node, remove from display list\r\n   */\r\n  toggleNode(node: DynamicFlatNode, expand: boolean) {\r\n    const children = this.database.getChildren(node.item);\r\n    const index = this.data.indexOf(node);\r\n    if (!children || index < 0) { // If no children, or cannot find the node, no op\r\n      return;\r\n    }\r\n\r\n    node.isLoading = true;\r\n\r\n    setTimeout(() => {\r\n      if (expand) {\r\n        const nodes = children.map(name =>\r\n          new DynamicFlatNode(name, node.level + 1, this.database.isExpandable(name)));\r\n        this.data.splice(index + 1, 0, ...nodes);\r\n      } else {\r\n        let count = 0;\r\n        for (let i = index + 1; i < this.data.length\r\n          && this.data[i].level > node.level; i++, count++) {}\r\n        this.data.splice(index + 1, count);\r\n      }\r\n\r\n      // notify the change\r\n      this.dataChange.next(this.data);\r\n      node.isLoading = false;\r\n    }, 1000);\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'dproz-basic-info',\r\n  templateUrl: './basic-info.component.html',\r\n  styleUrls: ['./basic-info.component.scss'],\r\n  providers: [DynamicDatabase]\r\n})\r\nexport class BasicInfoComponent implements OnInit {\r\n\r\n  isLinear = false;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n\r\n  constructor(private _formBuilder: FormBuilder,private database: DynamicDatabase) {\r\n\r\n    this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new DynamicDataSource(this.treeControl, database);\r\n\r\n    this.dataSource.data = database.initialData();\r\n   }\r\n\r\n   treeControl: FlatTreeControl<DynamicFlatNode>;\r\n\r\n  dataSource: DynamicDataSource;\r\n\r\n  getLevel = (node: DynamicFlatNode) => node.level;\r\n\r\n  isExpandable = (node: DynamicFlatNode) => node.expandable;\r\n\r\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\r\n\r\n   ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n\r\n}\r\n}\r\n","module.exports = \"\\n<div *ngIf=\\\"editForm\\\">\\n  <form [formGroup]=\\\"credentialForm\\\">\\n    <div  class=\\\"form-container\\\">\\n      <!-- //*ngFor=\\\"let credential in credentials\\\" -->\\n        <mat-form-field>\\n            <mat-label>Credential Type</mat-label>\\n            <mat-select  matInput formControlName=\\\"credentialType\\\" placeholder=\\\"Select Credential Type\\\">\\n              <mat-option *ngFor=\\\"let credential of credentials\\\" [value]=\\\"credential.Id\\\" >{{credential.Name}}</mat-option>\\n            \\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field >\\n              <mat-label>Credential Description</mat-label>\\n              <textarea matInput formControlName=\\\"credentialDescription\\\" placeholder=\\\"Enter Description\\\"></textarea>\\n              <mat-error *ngIf=\\\"!credentialForm.controls['credentialDescription'].valid\\\">credentia description is required</mat-error>\\n              <mat-icon matSuffix>adjust</mat-icon>\\n              <mat-hint>credentia description</mat-hint>\\n            </mat-form-field>\\n\\n      <mat-form-field >\\n          <mat-label>Credential Id</mat-label>\\n          <input matInput formControlName=\\\"CredentialId\\\" placeholder=\\\"Enter ID\\\">\\n          <mat-error *ngIf=\\\"!credentialForm.controls['CredentialId'].valid\\\">credential id is required</mat-error>\\n          <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\\n          <mat-hint>project name</mat-hint>\\n        </mat-form-field>\\n      \\n  \\n        \\n     \\n        <mat-form-field >\\n          <mat-label>Effective Date</mat-label>\\n          <input matInput formControlName=\\\"startDate\\\" [matDatepicker]=\\\"startDate\\\" placeholder=\\\"Choose start date\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"startDate\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #startDate></mat-datepicker>\\n          <mat-error *ngIf=\\\"!credentialForm.controls['startDate'].valid\\\">start date is required</mat-error>\\n          <mat-hint>start date</mat-hint>\\n        </mat-form-field>\\n      \\n  \\n  \\n        <mat-form-field>\\n          <mat-label>Expire Date</mat-label>\\n          <input matInput formControlName=\\\"endDate\\\" [matDatepicker]=\\\"endDate\\\" placeholder=\\\"Choose end date\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"endDate\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #endDate></mat-datepicker>\\n          <mat-error *ngIf=\\\"!credentialForm.controls['endDate'].valid\\\">end date is required</mat-error>\\n          <mat-hint>end date</mat-hint>\\n        </mat-form-field>\\n  \\n  \\n        <mat-form-field >\\n            <mat-label>Issuing Authority</mat-label>\\n            <input matInput formControlName=\\\"authorityName\\\" placeholder=\\\"Enter Authrity Name\\\">\\n            <mat-error *ngIf=\\\"!credentialForm.controls['authorityName'].valid\\\">Issuing Authority is required</mat-error>\\n            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\\n            <mat-hint>authority name</mat-hint>\\n          </mat-form-field>\\n        \\n          <!-- <div style=\\\"width:100%; clear:both;\\\">\\n              <div style=\\\"float:left; width:100%\\\">\\n            \\n                <input \\n                style=\\\"display: none\\\" \\n                type=\\\"file\\\" #attachment   (change)=\\\"onFileChanged($event)\\\">\\n              <button [disabled] = hasAttachment mat-button (click)=\\\"attachment.click()\\\">Add Attachment</button>\\n              \\n               <button mat-button (click)=\\\"onUpload()\\\">Upload!</button>  \\n             </div>\\n             <div formArrayName=\\\"attachments\\\">\\n\\n          \\n              <div *ngFor=\\\"let photo of credentialForm.get('attachments').controls; let i=index\\\" style=\\\"float:left; width: 50%; padding: 10px;\\\">\\n                <div [formGroupName]=\\\"i\\\">  \\n              \\n                 \\n                    <div style=\\\"float:left; \\\">\\n                       <img width=\\\"90%\\\" mat-card-image [src]= credentialForm.controls.attachments.controls[i].\\n                       controls.url.value alt=credentialForm.controls.attachments.controls[i].controls.caption.value> \\n                        <a [href]=credentialForm.controls.attachments.controls[i].controls.url.value>\\n                        {{credentialForm.controls.attachments.controls[i].controls.caption.value}}\\n                        </a>\\n                    </div>\\n                    <div style=\\\"float:left;\\\"><button mat-icon-button (click)=\\\"removeImage(i)\\\"> \\n                        <mat-icon>delete</mat-icon></button></div>\\n                  </div>\\n                    \\n                \\n              </div>\\n            </div>\\n              \\n              </div> -->\\n              \\n      </div>\\n      <div style=\\\"float:right;\\\">\\n            \\n          <button mat-button (click)=\\\"saveForm()\\\">Submit</button>\\n        </div>  \\n  </form>\\n  </div>\\n  <div *ngIf=\\\"viewAll\\\">\\n      <div style=\\\"float:left; color: \\t#50B2EC;\\\">\\n          Click the (+) Sign to Add Credential\\n          </div>\\n      <div style=\\\"float:right;\\\">\\n          <button mat-icon-button (click)=\\\"addCredential()\\\">\\n            <mat-icon>add</mat-icon></button>\\n          </div>\\n  <div>\\n  <div>\\n      <div style=\\\"width:90%;  clear:both; margin: auto;\\\" *ngFor=\\\"let cred of credentialData; let i of index\\\">\\n        <div style=\\\"float:right; clear: both;\\\"><button mat-icon-button (click)=\\\"editAttachment(cred, i)\\\"> \\n          <mat-icon>attach_file</mat-icon></button></div>\\n         \\n              <div style=\\\"float:right; clear: both;\\\"><button mat-icon-button (click)=\\\"editCredential(cred, i)\\\"> \\n                  <mat-icon>edit</mat-icon></button></div>\\n                  <div style=\\\"float:right; clear: both;\\\"><button mat-icon-button (click)=\\\"deleteCredential( i)\\\"> \\n                    <mat-icon>delete</mat-icon></button></div>\\n          <p style=\\\"font-weight: bold;\\\"> {{cred.type | credentialType}}, {{cred.issuedBy}}</p>\\n          <p> {{cred.description}}</p>\\n          <p> <span  style=\\\"font-weight: bold;\\\">Effective Date :</span> {{cred.effectiveDate | date }} \\n            <span  style=\\\"font-weight: bold;\\\"> Expire Date: </span> {{cred.expiringDate | date}}  </p>\\n          <hr>\\n     </div>\\n      </div></div></div>\\n\\n      <div style=\\\"margin-top: 10px\\\" *ngIf=\\\"viewOnly\\\">\\n        <!-- <div style=\\\"float:left; color: \\t#50B2EC;\\\">\\n            Click the (+) Sign to Add Credential\\n            </div>\\n        <div style=\\\"float:right;\\\">\\n            <button mat-icon-button (click)=\\\"addCredential()\\\">\\n              <mat-icon>add</mat-icon></button>\\n            </div> -->\\n    <div>\\n    <div>\\n        <div style=\\\"width:90%;  clear:both; margin: auto;\\\" >\\n          <div style=\\\"float:right; clear: both;\\\"><button mat-icon-button (click)=\\\"editCredential(currentCred, currentIndex)\\\"> \\n            <mat-icon>edit</mat-icon></button></div>\\n\\n            <div style=\\\"float:right; clear: both;\\\"><button mat-icon-button (click)=\\\"deleteCredential( currentIndex)\\\"> \\n                <mat-icon>delete</mat-icon></button></div>\\n              \\n            <p><span  style=\\\"font-weight: bold;\\\">Credential Type:</span> {{currentCred.type | credentialType}}</p>\\n            <p><span  style=\\\"font-weight: bold;\\\">Issuing Authority:</span> {{currentCred.issuedBy}}</p>\\n            <p><span  style=\\\"font-weight: bold;\\\">Identification Number: </span> {{currentCred.identificationNumber}}</p>\\n            <p><span  style=\\\"font-weight: bold;\\\">Description : </span>{{currentCred.description}}</p>\\n            <p> <span  style=\\\"font-weight: bold;\\\">Effective Date :</span> {{currentCred.effectiveDate | date }} </p>\\n            <p><span  style=\\\"font-weight: bold;\\\"> Expire Date: </span> {{currentCred.expiringDate | date}}  </p>\\n            \\n       </div><form [formGroup]=\\\"credentialForm\\\">\\n\\n        <div style=\\\"width:92%;  clear:both; margin: auto;\\\">\\n         \\n       <div formArrayName=\\\"attachments\\\">\\n\\n        <div *ngFor=\\\"let photo of credentialForm.get('attachments').controls; let i=index\\\" style=\\\"float:left; width: 50%; padding: 10px;\\\">\\n          <div [formGroupName]=\\\"i\\\">  \\n        \\n           \\n              <div style=\\\"float:left; \\\">\\n                <!-- <div  style=\\\" overflow-wrap: break-word;\\\"> -->\\n\\n                  <mat-form-field style=\\\"width:290px;\\\" >\\n                      <input matInput type=\\\"text\\\"   formControlName=\\\"caption\\\"  placeholder=\\\"Caption\\\">\\n                    \\n                      <button mat-button *ngIf=credentialForm.controls.attachments.controls[i].controls.caption.value matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"credentialForm.controls['attachments'].controls[i].controls['caption'].setValue('')\\\">\\n                        <mat-icon>close</mat-icon>\\n                      </button>\\n                    </mat-form-field>\\n\\n                  <!-- <textarea matInput placeholder=\\\"Leave a comment\\\"></textarea> -->\\n\\n              <!-- </div> -->\\n              <div>\\n                  <!-- <img width=\\\"90%\\\" mat-card-image [src]= credentialForm.controls.attachments.controls[i].controls.url.value alt=credentialForm.controls.attachments.controls[i].controls.caption.value> -->\\n                  <a [href]=credentialForm.controls.attachments.controls[i].controls.url.value>\\n                  {{credentialForm.controls.attachments.controls[i].controls.caption.value}}\\n                  </a>\\n                  <div style=\\\"float:right;\\\"><button mat-icon-button (click)=\\\"removeImage(i)\\\"> \\n                    <mat-icon>delete</mat-icon></button></div>\\n                </div>\\n              </div>\\n              \\n            </div>\\n              \\n            <div style=\\\"float:right;\\\">\\n              </div>\\n        </div>\\n        <div style=\\\"float:left; width:100%\\\">\\n        \\n          <input \\n          style=\\\"display: none\\\" \\n          type=\\\"file\\\" #attachment   (change)=\\\"onFileChanged($event)\\\">\\n        <button [disabled] = hasAttachment mat-button (click)=\\\"attachment.click()\\\">Add Attachment(Optional)</button>\\n        <button mat-button (click)=\\\"closeView()\\\">Exit</button>\\n        <button [disabled] = !hasAttachment mat-button (click)=\\\"saveAttachment()\\\">Save</button>\\n        \\n        <!-- <button mat-button (click)=\\\"onUpload()\\\">Upload!</button>  -->\\n       </div>\\n      </div>\\n     \\n      </div>    </form>\\n        </div></div></div>\"","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 10px 20px; }\\n\\n.form-container > * {\\n  width: 100%;\\n  margin: 10px 0px; }\\n\"","import { DocumentService } from './../../shared/services/document.service';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Attachment, UrlClass } from '../../shared/domain/common_data';\nimport { CredentialClass, CredentialType } from '../../shared/domain/credential';\nimport { CredentialsService } from '../../shared/services/credentials.service';\n\n\n\n\n@Component({\n  selector: 'dproz-credentials',\n  templateUrl: './dproz-credentials.component.html',\n  styleUrls: ['./dproz-credentials.component.scss']\n})\nexport class DprozCredentialsComponent implements OnInit {\n\n  editForm: boolean = false;\n  credentialForm: FormGroup;\n  credentials: CredentialType[];\n  credentialData: CredentialClass[] = [];\n  hasAttachment: boolean = false;\n  viewOnly: boolean = false;\n  viewAll: boolean = true;\n  currentCred: CredentialClass;\n  currentIndex: number = -1;\n  credentialRefId: string;\n  newAttachment: boolean = false;\n\n  attachments: FormArray;\n  constructor(private fb: FormBuilder, private credentialService: CredentialsService, private documentService: DocumentService) {\n\n    this.credentials = credentialService.getCredentiaTypes();\n\n    this.setNewForm();\n\n  }\n\n  setCurrentCred(cred: CredentialClass) {\n\n    this.setNewForm();\n\n    let credentialForm = this.credentialForm;\n\n    credentialForm.get(\"credentialType\").setValue(cred.type);\n    credentialForm.get(\"credentialDescription\").setValue(cred.description);\n    credentialForm.get(\"startDate\").setValue(cred.effectiveDate);\n    credentialForm.get(\"endDate\").setValue(cred.expiringDate);\n\n\n\n    credentialForm.get(\"CredentialId\").setValue(cred.identificationNumber);\n    credentialForm.get(\"authorityName\").setValue(cred.issuedBy);\n\n\n\n    let attachement = cred.attachment;\n    this.hasAttachment = true;\n    if (attachement != null) {\n      this.hasAttachment = true;\n      this.addPhoto(null, attachement.url.url, attachement.description);\n    }\n\n  }\n\n  setNewForm(): any {\n\n    this.credentialForm = this.fb.group({\n\n      'credentialType': ['', Validators.required],\n      'credentialDescription': ['', Validators.required],\n      'startDate': ['', Validators.required],\n      'endDate': ['', Validators.required],\n\n\n      'CredentialId': ['', Validators.minLength(4)],\n      'authorityName': [''],\n\n\n      attachments: this.fb.array([this.createAttachment()])\n\n    });\n\n    this.attachments = this.credentialForm.get('attachments') as FormArray;\n\n    this.newAttachment = false;\n    this.attachments.removeAt(0);\n  }\n\n\n  createAttachment(file = null, url = null, caption = null): FormGroup {\n    return this.fb.group({\n      file: file,\n      url: url,\n      caption: caption\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  removeImage(img) {\n\n    this.attachments = this.credentialForm.get('attachments') as FormArray;\n\n    this.attachments.removeAt(img);\n    this.hasAttachment = false;\n    this.newAttachment = false;\n\n  }\n\n  addPhoto(file, url, caption): void {\n\n    this.attachments = this.credentialForm.get('attachments') as FormArray;\n\n\n    this.attachments.push(this.createAttachment(file, url, caption));\n    this.hasAttachment = true;\n\n  }\n\n  onFileChanged(event) {\n\n    console.log(event.target.files[0].name);\n\n    if (event.target.files && event.target.files[0]) {\n\n      // this.files.push(event.target.files[0]);\n      let file = event.target.files[0];\n      var reader = new FileReader();\n      let caption = event.target.files[0].name;\n      reader.readAsDataURL(event.target.files[0]);\n\n      reader.onload = (event: any) => {\n        let url = event.target.result;\n\n        this.addPhoto(file, url, caption);\n        this.newAttachment = true;\n\n      }\n    } else {\n\n      this.newAttachment = false;\n    }\n\n  }\n\n  addCredential() {\n    this.editForm = true;\n    this.viewOnly = false;\n    this.viewAll = false;\n\n  }\n\n  getAttachments(): Attachment[] {\n\n    let attachments: Attachment[] = [];\n\n    this.attachments = this.credentialForm.get('attachments') as FormArray;\n\n    for (let i = 0; i < this.attachments.controls.length; i++) {\n\n      let attachmentForm = this.attachments.controls[i] as FormGroup;\n      let file = attachmentForm.controls[\"file\"].value;\n      let url = attachmentForm.controls[\"url\"].value;\n      let caption = attachmentForm.controls[\"caption\"].value;\n\n      let attachment: Attachment = <Attachment>{\n        referenceId: \"\",\n        parentReferenceId: \"\",\n        category: \"CREDENTIAL\",\n        url: <UrlClass>{ url: url },\n        thumbnail: true,\n        userReferenceId: \"\",\n        description: caption,\n        createdDate: (new Date()).toDateString()\n      };\n\n\n      attachments.push(attachment);\n\n    }\n    return attachments;\n  }\n\n  getCurrentCredential(attachment: Attachment): CredentialClass {\n\n\n    let credential = new CredentialClass();\n\n    credential.type = this.credentialForm.get(\"credentialType\").value;\n    credential.description = this.credentialForm.get(\"credentialDescription\").value;\n    credential.identificationNumber = this.credentialForm.get(\"CredentialId\").value;\n    credential.referenceId = \"\";\n    credential.issuedBy = this.credentialForm.get(\"authorityName\").value;\n    credential.effectiveDate = this.credentialForm.get(\"startDate\").value;\n    credential.expiringDate = this.credentialForm.get(\"endDate\").value;\n\n    credential.attachment = attachment;\n\n    return credential;\n  }\n\n  saveForm() {\n\n    let attachment: Attachment = null;\n    if (this.getAttachments().length > 0) {\n      attachment = this.getAttachments()[0];\n      console.log(\"attach\");\n    }\n\n\n    let credential: CredentialClass = this.getCurrentCredential(attachment);\n\n    if (this.currentIndex == -1) {\n      this.credentialData.push(credential);\n      this.currentIndex = this.credentialData.length - 1;\n    }\n\n    else\n      this.credentialData[this.currentIndex] = credential;\n\n    this.currentCred = credential;\n    console.log(credential);\n    this.viewOnly = true;\n    this.viewAll = false;\n    this.editForm = false;\n\n    this.credentialService\n      .insertCredential(credential.getPostingData())\n      .subscribe(credId => {\n        this.credentialRefId = credId;\n      }, error => {\n        console.log(error);\n      });\n\n\n  }\n\n  editAttachment(cred: CredentialClass, i: number) {\n    this.currentCred = cred;\n    this.currentIndex = i;\n    this.viewOnly = true;\n    this.viewAll = false;\n    this.editForm = false;\n  }\n\n  editCredential(cred: CredentialClass, i: number) {\n    if (i != -1)\n      this.currentIndex = i;\n\n    this.currentCred = cred;\n    this.setCurrentCred(this.currentCred)\n    this.editForm = true;\n    this.viewOnly = false;\n    this.viewAll = false;\n  }\n\n  closeView() {\n    this.editForm = false;\n    this.viewOnly = false;\n    this.viewAll = true;\n  }\n\n  deleteCredential(i: number) {\n    this.credentialData.splice(i, 1);\n    this.closeView();\n  }\n\n\n\n\n\n  saveAttachment() {\n\n    if (!this.newAttachment)\n      return;\n\n    let attachment: Attachment = null;\n    this.hasAttachment = false;\n\n    if (this.getAttachments().length > 0) {\n      attachment = this.getAttachments()[0];\n      this.hasAttachment = true;\n      this.attachments = this.credentialForm.get('attachments') as FormArray;\n\n      this.documentService\n        .postDocument(this.attachments[0].get(\"file\").value,\n          \"attachmentParentReferenceId\", \"attachmentCategory\", \"attachmentDescription\", \"thumbnail\")\n        .subscribe(doc => {\n\n        }, error => {\n          console.log(error);\n        });\n\n    }\n\n    this.currentCred.attachment = attachment;\n    this.credentialData[this.currentIndex] = this.currentCred;\n\n    this.closeView();\n\n  }\n\n\n}\n","module.exports = \"\\n<div *ngIf=\\\"editForm\\\">\\n<form [formGroup]=\\\"experienceForm\\\"><div class=\\\"form-container\\\">\\n  <!-- <mat-card class=\\\"example-card\\\">\\n    \\n              <mat-card-content> -->\\n                  <button *ngIf=\\\"false\\\" mat-raised-button (click)=\\\"isLinear = !isLinear\\\" id=\\\"toggle-linear\\\">\\n                      {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\\n                    </button>\\n                    <mat-horizontal-stepper [linear]=\\\"isLinear\\\" #stepper>\\n                      <mat-step [stepControl]=\\\"projectDetails\\\">\\n                        <div formGroupName=\\\"projectDetails\\\" class=\\\"form-container\\\">\\n                          <ng-template matStepLabel>Fill out Project Details</ng-template>\\n                          <mat-form-field >\\n                              <mat-label>Project Name</mat-label>\\n                              <input matInput formControlName=\\\"projectName\\\" placeholder=\\\"Enter Project Name\\\">\\n                              <mat-error *ngIf=\\\"!experienceForm.controls['projectDetails'].controls['projectName'].valid\\\">project name is required</mat-error>\\n                              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\\n                              <mat-hint>project name</mat-hint>\\n                            </mat-form-field>\\n                          \\n                      \\n                            \\n                         \\n                            <mat-form-field >\\n                              <mat-label>Start Date</mat-label>\\n                              <input matInput formControlName=\\\"startDate\\\" [matDatepicker]=\\\"startDate\\\" placeholder=\\\"Choose start date\\\">\\n                              <mat-datepicker-toggle matSuffix [for]=\\\"startDate\\\"></mat-datepicker-toggle>\\n                              <mat-datepicker #startDate></mat-datepicker>\\n                              <mat-error *ngIf=\\\"!experienceForm.controls['projectDetails'].controls['startDate'].valid\\\">start date must be before today's date</mat-error>\\n                              <mat-hint>start date</mat-hint>\\n                            </mat-form-field>\\n                          \\n                      \\n                      \\n                            <mat-form-field>\\n                              <mat-label>End Date</mat-label>\\n                              <input matInput formControlName=\\\"endDate\\\" [matDatepicker]=\\\"endDate\\\" placeholder=\\\"Choose end date\\\">\\n                              <mat-datepicker-toggle matSuffix [for]=\\\"endDate\\\"></mat-datepicker-toggle>\\n                              <mat-datepicker #endDate></mat-datepicker>\\n                              <mat-error *ngIf=\\\"!experienceForm.controls['projectDetails'].controls['endDate'].valid\\\">end date must be later than start date</mat-error>\\n                              <mat-hint>end date</mat-hint>\\n                            </mat-form-field>\\n                      \\n                      \\n                        \\n                            <mat-form-field >\\n                              <mat-label>Project Description</mat-label>\\n                              <textarea matInput formControlName=\\\"projectDescription\\\" placeholder=\\\"Enter Project Description\\\"></textarea>\\n                              <mat-error *ngIf=\\\"!experienceForm.controls['projectDetails'].controls['projectName'].valid\\\">project description is required</mat-error>\\n                              <mat-icon matSuffix>adjust</mat-icon>\\n                              <mat-hint>project description</mat-hint>\\n                            </mat-form-field>\\n                          </div>\\n                          <div style=\\\"float:right;\\\">\\n                              <button mat-button matStepperNext>Next</button>\\n                            </div>\\n                      </mat-step>\\n                      <mat-step [stepControl]=\\\"clientDetails\\\">\\n                        <div formGroupName=\\\"clientDetails\\\" class=\\\"form-container\\\">\\n                          <ng-template matStepLabel>Fill out Cleint Details</ng-template>\\n                         \\n                          <mat-form-field >\\n                              <mat-label>Client Name</mat-label>\\n                              <input matInput formControlName=\\\"customerNames\\\" placeholder=\\\"Enter Client Name\\\">\\n                              <mat-error *ngIf=\\\"!experienceForm.controls['clientDetails'].controls['customerNames'].valid\\\">client name minimum 4 charactors</mat-error>\\n                              <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\\n                              <mat-hint>Client name</mat-hint>\\n                            </mat-form-field>\\n                         \\n                            <mat-form-field >\\n                                <mat-label>Phone Number</mat-label>\\n                                <input matInput formControlName=\\\"phoneNumber\\\" placeholder=\\\"Enter Phone Number\\\">\\n                                <mat-error *ngIf=\\\"!experienceForm.controls['clientDetails'].controls['phoneNumber'].valid\\\">phone number must be valid</mat-error>\\n                                <mat-icon matSuffix>call</mat-icon>\\n                                <mat-hint>phone number</mat-hint>\\n                              </mat-form-field>\\n                      \\n                              <mat-form-field >\\n                                  <mat-label>Email Address</mat-label>\\n                                  <input matInput formControlName=\\\"emailAddress\\\" placeholder=\\\"Enter Email Address\\\">\\n                                  <mat-error *ngIf=\\\"!experienceForm.controls['clientDetails'].controls['emailAddress'].valid\\\">email address must be valid</mat-error>\\n                                  <mat-icon matSuffix>alternate_email</mat-icon>\\n                                  <mat-hint>email address</mat-hint>\\n                                </mat-form-field>\\n                      \\n                                <mat-checkbox formControlName=\\\"allowContact\\\">Allow customer to contact client</mat-checkbox>\\n                        \\n                          \\n                       \\n                       \\n                        </div>\\n                         \\n                        <div style=\\\"float:right;\\\">\\n                            <button mat-button matStepperPrevious>Back</button>\\n                            <button mat-button matStepperNext>Next</button>\\n                          </div>\\n                      </mat-step>\\n                      <mat-step>\\n                        <ng-template matStepLabel>Upload Photos</ng-template>\\n                        <div style=\\\"width:100%; clear:both;\\\">\\n                          <div style=\\\"float:left; width:100%\\\">\\n                        \\n                            <input \\n                            style=\\\"display: none\\\"  capture=\\\"camera\\\"\\n                            type=\\\"file\\\" #image accept=\\\"image/*\\\"  (change)=\\\"onFileChanged($event)\\\">\\n                          <button mat-button (click)=\\\"image.click()\\\">Add Photo( 3 advisable)</button>\\n                          \\n                          <!-- <button mat-button (click)=\\\"onUpload()\\\">Upload!</button>  -->\\n                         </div>\\n                         <div formArrayName=\\\"photos\\\">\\n\\n                      \\n                          <div *ngFor=\\\"let photo of experienceForm.get('photos').controls; let i=index\\\" style=\\\"float:left; width:290px; padding: 10px;\\\">\\n                            <div [formGroupName]=\\\"i\\\">  \\n                            <div  style=\\\" overflow-wrap: break-word;\\\">\\n\\n                                  <mat-form-field style=\\\"width:270px;\\\" >\\n                                      <input matInput type=\\\"text\\\"   formControlName=\\\"caption\\\"  placeholder=\\\"Caption\\\">\\n                                    \\n                                      <button mat-button *ngIf=experienceForm.controls.photos.controls[i].controls.caption.value matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"experienceForm.controls['photos'].controls[i].controls['caption'].setValue('')\\\">\\n                                        <mat-icon>close</mat-icon>\\n                                      </button>\\n                                    </mat-form-field>\\n\\n                                  <!-- <textarea matInput placeholder=\\\"Leave a comment\\\"></textarea> -->\\n\\n                              </div>\\n                              <div style=\\\"float:right; margin: 10px 0px;\\\"><button mat-icon-button (click)=\\\"removeImage(i)\\\"> \\n                                <mat-icon>delete</mat-icon></button></div>\\n                                <div  style=\\\"margin: 20px 30px;\\\">\\n\\n                                    <img style=\\\"max-height:200px; height: auto; width:auto; max-width: 270px;\\\" mat-card-image [src]= experienceForm.controls.photos.controls[i].controls.url.value alt=experienceForm.controls.photos.controls[i].controls.caption.value>\\n                                    \\n                                </div></div>\\n                                \\n                                <!-- <div style=\\\" overflow-wrap: break-word; font-size: 10px;\\\">\\n                                    {{experienceForm.controls['photos'].controls[i].controls['caption'].value}}\\n                                    {{experienceForm.controls['photos'].controls[i].controls['caption']}}\\n                                </div> -->\\n                          </div>\\n                        </div>\\n                          \\n                          </div>\\n\\n                        \\n                    \\n                     \\n                        <div style=\\\"float:right; clear:both\\\">\\n                          <button mat-button matStepperPrevious>Back</button>\\n                          <button mat-button  (click)=\\\"stepper.reset()\\\">Reset</button>\\n                          <button mat-button (click)=\\\"saveForm()\\\">Submit</button>\\n                        </div>\\n                      </mat-step>\\n                    </mat-horizontal-stepper>\\n                \\n\\n    \\n   \\n    \\n  \\n  <!-- </mat-card-content></mat-card> --></div>\\n</form>\\n</div>\\n<div *ngIf=\\\"!editForm\\\">\\n    <div style=\\\"float:left; color: \\t#50B2EC;\\\">\\n        Click the (+) Sign to Add Experience\\n        </div>\\n    <div style=\\\"float:right;\\\">\\n        <button mat-icon-button (click)=\\\"addExperience()\\\">\\n          <mat-icon>add</mat-icon></button>\\n        </div>\\n<div style=\\\"float: left; clear: both;\\\">\\n  <div *ngFor=\\\"let project of projects; let i=index\\\" style=\\\"float:left; width:290px; padding: 10px;\\\">\\n\\n    <div style=\\\"float:right; margin: 10px 0px;\\\"><button mat-icon-button (click)=\\\"deleteExperience(i)\\\"> \\n      <mat-icon>delete</mat-icon></button></div>                   \\n    <div style=\\\"float:right; margin: 10px 0px;\\\"><button mat-icon-button (click)=\\\"editExperience(project,i)\\\"> \\n      <mat-icon>edit</mat-icon></button></div>\\n      <div style=\\\"margin: 20px 30px; \\\"><p>\\n          <img  style=\\\"max-height:200px; height: auto; width:auto; max-width: 270px;\\\" mat-card-image [src]= project.attachments[0].url.url alt=project.attachments[0].url.url> \\n          </p><p style=\\\"font-weight:bold\\\">{{project.projectName}}</p>\\n          <p>({{project.startDate | date}} - {{project.completedDate | date}})</p>\\n          \\n          <p style=\\\"color:gray\\\">{{project.projectDescription}}</p>\\n      </div>\\n     \\n </div>\\n\\n</div>\\n<div style=\\\"clear:both; width:100%\\\">\\n  <mat-paginator [length]=\\\"length\\\"\\n  [pageSize]=\\\"pageSize\\\"\\n  [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n  (page)=\\\"pageChange($event)\\\">\\n</mat-paginator>\\n</div>\\n\\n</div>\"","module.exports = \".form-container {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 10px 20px; }\\n\\n.form-container > * {\\n  width: 100%;\\n  margin: 10px 0px; }\\n\\n.image-container {\\n  width: 270px;\\n  /*or 70%, or what you want*/\\n  height: 200px;\\n  /*or 70%, or what you want*/\\n  background-size: auto;\\n  background-position: center;\\n  background-repeat: no-repeat; }\\n\"","import { Attachment, UrlClass } from './../../shared/domain/common_data';\nimport { ClientDetails, Consent, Project } from './../../shared/domain/experience';\nimport { ProjectsService } from './../../shared/services/projects.service';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormControl, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { StandardLocation } from '../../shared/domain/common_data';\nimport { PageEvent } from '@angular/material';\nimport { debounce } from 'rxjs/operators';\nimport { timer } from 'rxjs';\n\n\n//custom date validator for start date not after today\nfunction startDateValidator(control: AbstractControl): { [key: string]: boolean } | null {\n  if (control.value !== undefined && (isNaN(control.value) || control.value > new Date())) {\n    return { 'startDate': true };\n  }\n  return null;\n}\n\n//custom date validator for end date not before start date\nfunction endDateValidator(startDate: Date): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: boolean } | null => {\n    if (control.value !== undefined && (isNaN(control.value) || control.value <= startDate)) {\n      return { 'endDate': true };\n    }\n    return null;\n  };\n}\n\n\n\nexport interface FileReaderEventTarget extends EventTarget {\n  result: string;\n}\n\nexport interface FileReaderEvent extends Event {\n  target: FileReaderEventTarget;\n  getMessage(): string;\n}\n\n\n\n\n\nexport class MyFile {\n  url: string;\n  caption: string;\n  file;\n}\n\n\n\n\n@Component({\n  selector: 'dproz-experience',\n  templateUrl: './dproz-experience.component.html',\n  styleUrls: ['./dproz-experience.component.scss']\n})\nexport class DprozExperienceComponent implements OnInit {\n\n  experienceForm: FormGroup;\n  hide = true;\n  editForm: boolean = false;\n  add: boolean = false;\n  edit: boolean = false;\n  index: number = 0;\n  photos: FormArray;\n  projects: Project[] = [];\n  startDateValue: Date = new Date();\n\n\n\n\n\n  public files = [];\n  public urls: MyFile[] = [];\n\n\n\n\n  removeImage(img) {\n\n    this.photos = this.experienceForm.get('photos') as FormArray;\n\n    this.photos.removeAt(img);\n\n  }\n  public fileOver(event) {\n    console.log(event);\n  }\n\n  public fileLeave(event) {\n    console.log(event);\n  }\n\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n\n  pageChange(event) {\n    console.log(event);\n  }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n  }\n  constructor(private fb: FormBuilder, private projectService: ProjectsService) {\n\n    this.setNewForm();\n\n  }\n\n  setNewForm() {\n    this.experienceForm = this.fb.group({\n      'projectDetails': this.fb.group({\n        'projectName': ['', Validators.required],\n        'projectDescription': ['', Validators.required],\n        'startDate': ['', Validators.compose([Validators.required, startDateValidator])],\n        'endDate': ['', Validators.compose([Validators.required])],\n      }),\n      'clientDetails': this.fb.group({\n        'customerNames': ['', Validators.compose([Validators.minLength(4), Validators.required])],\n        'phoneNumber': [''],\n        'emailAddress': ['', Validators.email],\n        'allowContact': [''],\n      }),\n      photos: this.fb.array([this.createPhoto()])\n\n    });\n\n\n\n    //assign value to endDate everytime the startDate changes\n    let date = this.experienceForm.get('projectDetails').get('startDate') as FormControl;\n    date.valueChanges.pipe(debounce(() => timer(100))).subscribe(x => {\n      let u = this.experienceForm.get('projectDetails').get('endDate') as FormControl;\n      u.setValidators(endDateValidator(date.value));\n      let old = u.value;\n      u.setValue(old);\n    });\n\n\n  \n    this.photos = this.experienceForm.get('photos') as FormArray;\n    this.photos.removeAt(0);\n\n  }\n\n  createPhoto(file = null, url = null, caption = null): FormGroup {\n    return this.fb.group({\n      file: file,\n      url: url,\n      caption: caption\n    });\n  }\n\n  addPhoto(file, url, caption): void {\n\n    this.photos = this.experienceForm.get('photos') as FormArray;\n\n\n    this.photos.push(this.createPhoto(file, url, caption));\n  }\n\n  onFileChanged(event) {\n\n    console.log(event.target.files[0].name);\n\n    if (event.target.files && event.target.files[0]) {\n\n      this.files.push(event.target.files[0]);\n      let file = event.target.files[0];\n      var reader = new FileReader();\n      let caption = event.target.files[0].name;\n      reader.readAsDataURL(event.target.files[0]);\n\n      reader.onload = (event: any) => {\n        let url = event.target.result;\n\n        this.addPhoto(file, url, caption)\n      }\n    }\n\n  }\n\n  addExperience() {\n\n    this.setNewForm();\n\n    this.editForm = true;\n    this.edit = false;\n    this.add = true;\n  }\n\n  //get attachments from the form to attachment data structure for submission\n  getAttachments(): Attachment[] {\n\n    let attachments: Attachment[] = [];\n\n    this.photos = this.experienceForm.get('photos') as FormArray;\n\n    for (let i = 0; i < this.photos.controls.length; i++) {\n\n      let attachmentForm = this.photos.controls[i] as FormGroup;\n      let file = attachmentForm.controls[\"file\"].value;\n      let url = attachmentForm.controls[\"url\"].value;\n      let caption = attachmentForm.controls[\"caption\"].value;\n\n      let attachment: Attachment = <Attachment>{\n        referenceId: \"\",\n        parentReferenceId: \"\",\n        category: \"PROJECT\",\n        url: <UrlClass>{ url: url },\n        thumbnail: true,\n        userReferenceId: \"\",\n        description: caption,\n        createdDate: (new Date()).toDateString()\n      };\n\n\n      attachments.push(attachment);\n\n    }\n    return attachments;\n  }\n\n  //get project data from the form to project data structure for submission\n  getCurrentProject(attachments: Attachment[]): Project {\n\n    let client: ClientDetails = <ClientDetails>{\n\n      fistName: this.experienceForm.get(\"clientDetails\").get(\"customerNames\").value,\n      lastName: this.experienceForm.get(\"clientDetails\").get(\"customerNames\").value,\n      phoneNumber: this.experienceForm.get(\"clientDetails\").get(\"phoneNumber\").value,\n      emailAddress: this.experienceForm.get(\"clientDetails\").get(\"emailAddress\").value,\n    };\n\n    let project = new Project();\n\n    project.projectName = this.experienceForm.get(\"projectDetails\").get(\"projectName\").value;\n    project.projectDescription = this.experienceForm.get(\"projectDetails\").get(\"projectDescription\").value;\n    project.projectLocation = <StandardLocation>{\n      longitude: 0, latitude: 0, street: \"\", county: \"\", zip: \"\", city: \"\", region: \"\", country: \"\"\n    };\n    project.startDate = this.experienceForm.get(\"projectDetails\").get(\"startDate\").value;\n    project.completedDate = this.experienceForm.get(\"projectDetails\").get(\"endDate\").value;\n    project.client = client;\n    project.consent = <Consent>{ text: \"\", acknowledged: true, signedOn: \"\" };\n    project.offeredServices = [];\n    project.services = [];\n    project.attachments = [];\n    project.attachments = attachments;\n\n    return project;\n  }\n\n  //mostly used when editing, load data into the form\n  setCurrentProject(project: Project) {\n\n    this.setNewForm();\n\n    let projetDetails = this.experienceForm.get(\"projectDetails\") as FormGroup;\n\n    projetDetails.get(\"projectName\").setValue(project.projectName);\n    projetDetails.get(\"projectDescription\").setValue(project.projectDescription);\n    projetDetails.get(\"startDate\").setValue(project.startDate);\n    projetDetails.get(\"endDate\").setValue(project.completedDate);\n\n    let clientDetails = this.experienceForm.get(\"clientDetails\") as FormGroup;\n\n    clientDetails.get(\"customerNames\").setValue(project.client.fistName);\n    clientDetails.get(\"phoneNumber\").setValue(project.client.phoneNumber);\n    clientDetails.get(\"emailAddress\").setValue(project.client.emailAddress);\n\n\n    for (let i = 0; i < project.attachments.length; i++) {\n      let attachement = project.attachments[i];\n      this.addPhoto(null, attachement.url.url, attachement.description);\n    }\n  }\n\n  saveForm() {\n\n    let attachments: Attachment[] = this.getAttachments();\n    let project: Project = this.getCurrentProject(attachments);\n\n    if (this.add)\n      this.projects.push(project);\n    else\n      this.projects[this.index] = project;\n\n    console.log(project.getPostingData());\n\n    this\n      .projectService\n      .postProject(project.getPostingData())\n      .subscribe(x => {\n        ////\n        console.log(x);\n      });\n\n    this.editForm = false;\n    this.add = false;\n    this.edit = false;\n  }\n\n  editExperience(project, index) {\n\n    this.setCurrentProject(project);\n    this.index = index;\n    this.editForm = true;\n    this.edit = true;\n    this.add = false;\n  }\n\n\n\n  deleteExperience(index) {\n\n    this.projects.splice(index, 1);\n  }\n\n  ngOnInit() {\n  }\n\n\n}\n\n\n\n","module.exports = \".scrollbar {\\r\\n\\tmargin-left: 22px;\\r\\n\\tfloat: left;\\r\\n\\theight: 300px;\\r\\n\\twidth: 65px;\\r\\n\\tbackground: #F5F5F5;\\r\\n\\toverflow-y: scroll;\\r\\n\\tmargin-bottom: 25px;\\r\\n}\\r\\n\\r\\n.force-overflow {\\r\\n\\tmin-height: 450px;\\r\\n}\\r\\n\\r\\n#wrapper {\\r\\n\\ttext-align: center;\\r\\n\\tmargin: auto;\\r\\n}\\r\\n\\r\\n#style-1::-webkit-scrollbar,\\r\\n#style-2::-webkit-scrollbar {\\r\\n\\twidth: 12px;\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n#style-4::-webkit-scrollbar,\\r\\n#style-5::-webkit-scrollbar,\\r\\n#style-6::-webkit-scrollbar,\\r\\n#style-7::-webkit-scrollbar,\\r\\n#style-8::-webkit-scrollbar,\\r\\n#style-9::-webkit-scrollbar,\\r\\n#style-10::-webkit-scrollbar,\\r\\n#style-11::-webkit-scrollbar {\\r\\n\\twidth: 10px;\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n/**  STYLE 1 */\\r\\n\\r\\n#style-1::-webkit-scrollbar-thumb {\\r\\n\\tborder-radius: 10px;\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\\r\\n\\tbackground-color: #555;\\r\\n}\\r\\n\\r\\n#style-1::-webkit-scrollbar-track {\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n\\tborder-radius: 10px;\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n/**  STYLE 2 */\\r\\n\\r\\n#style-2::-webkit-scrollbar-thumb {\\r\\n\\tborder-radius: 10px;\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\\r\\n\\tbackground-color: #D62929;\\r\\n}\\r\\n\\r\\n#style-2::-webkit-scrollbar-track {\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n\\tborder-radius: 10px;\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n/**  STYLE 3 */\\r\\n\\r\\n#style-3::-webkit-scrollbar-track {\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n#style-3::-webkit-scrollbar {\\r\\n\\twidth: 6px;\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n#style-3::-webkit-scrollbar-thumb {\\r\\n\\tbackground-color: #000000;\\r\\n}\\r\\n\\r\\n/**  STYLE 4 */\\r\\n\\r\\n#style-4::-webkit-scrollbar-track {\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n#style-4::-webkit-scrollbar-thumb {\\r\\n\\tbackground-color: #000000;\\r\\n\\tborder: 2px solid #555555;\\r\\n}\\r\\n\\r\\n/**  STYLE 5 */\\r\\n\\r\\n#style-5::-webkit-scrollbar-track {\\r\\n    width: 6px;\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n#style-5::-webkit-scrollbar-thumb {\\r\\n\\tbackground-color: #0ae;\\r\\n\\tbackground-image: -webkit-gradient(linear, 0 0, 0 100%,\\r\\n\\t                  color-stop(.5, rgba(255, 255, 255, .2)),\\r\\n\\t\\t\\t\\t\\t          color-stop(.5, transparent), to(transparent));\\r\\n}\\r\\n\\r\\n/**  STYLE 6 */\\r\\n\\r\\n#style-6::-webkit-scrollbar-track {\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n#style-6::-webkit-scrollbar-thumb {\\r\\n\\tbackground-color: #F90;\\t\\r\\n\\tbackground-image: -webkit-linear-gradient(45deg,rgba(255, 255, 255, .2) 25%,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  transparent 25%,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  transparent 50%,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  rgba(255, 255, 255, .2) 50%,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  rgba(255, 255, 255, .2) 75%,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  transparent 75%,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  transparent)\\r\\n}\\r\\n\\r\\n/** STYLE 7 */\\r\\n\\r\\n#style-7::-webkit-scrollbar-track {\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n\\tbackground-color: #F5F5F5;\\r\\n\\tborder-radius: 10px;\\r\\n}\\r\\n\\r\\n#style-7::-webkit-scrollbar-thumb {\\r\\n\\tborder-radius: 10px;\\r\\n\\tbackground-image: -webkit-gradient(linear,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   left bottom,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   left top,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   color-stop(0.44, rgb(122,153,217)),\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   color-stop(0.72, rgb(73,125,189)),\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   color-stop(0.86, rgb(28,58,148)));\\r\\n}\\r\\n\\r\\n/**  STYLE 8 */\\r\\n\\r\\n#style-8::-webkit-scrollbar-track {\\r\\n\\tborder: 1px solid black;\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n#style-8::-webkit-scrollbar-thumb {\\r\\n\\tbackground-color: #000000;\\t\\r\\n}\\r\\n\\r\\n/**  STYLE 9 */\\r\\n\\r\\n#style-9::-webkit-scrollbar-track {\\r\\n\\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n\\tbackground-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n#style-9::-webkit-scrollbar-thumb {\\r\\n\\tbackground-color: #F90;\\t\\r\\n\\tbackground-image: -webkit-linear-gradient(90deg, rgba(255, 255, 255, .2) 25%,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  transparent 25%,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  transparent 50%,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  rgba(255, 255, 255, .2) 50%,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  rgba(255, 255, 255, .2) 75%,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  transparent 75%,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  transparent)\\r\\n}\\r\\n\\r\\n/**  STYLE 10 */\\r\\n\\r\\n#style-10::-webkit-scrollbar-thumb {\\r\\n  border-radius: 10px;\\r\\n  background: linear-gradient(left, #96A6BF, #63738C);\\r\\n  box-shadow: inset 0 0 1px 1px #5C6670;\\r\\n}\\r\\n\\r\\n#style-10::-webkit-scrollbar-track {\\r\\n  border-radius: 10px;\\r\\n  background: #eee;\\r\\n  box-shadow: 0 0 1px 1px #bbb, inset 0 0 7px rgba(0,0,0,0.3)\\r\\n}\\r\\n\\r\\n#style-10::-webkit-scrollbar-thumb:hover {\\r\\n  background: linear-gradient(left, #8391A6, #536175);\\r\\n}\\r\\n\\r\\n/**  STYLE 11 */\\r\\n\\r\\n#style-11::-webkit-scrollbar-track {\\r\\n  border-radius: 10px;\\r\\n  background: rgba(0,0,0,0.1);\\r\\n  border: 1px solid #ccc;\\r\\n}\\r\\n\\r\\n#style-11::-webkit-scrollbar-thumb {\\r\\n  border-radius: 10px;\\r\\n  background: linear-gradient(left, #fff, #e4e4e4);\\r\\n  border: 1px solid #aaa;\\r\\n}\\r\\n\\r\\n#style-11::-webkit-scrollbar-thumb:hover {\\r\\n  background: #fff;\\r\\n}\\r\\n\\r\\n#style-11::-webkit-scrollbar-thumb:active {\\r\\n  background: linear-gradient(left, #22ADD4, #1E98BA);\\r\\n}\"","module.exports = \"<div   style=\\\"text-align:center; background-color:#F5F5F5; color: \\t#50B2EC; margin: 10px 0px; padding: 10px 0px;\\\">\\r\\n    <h5 style=\\\"text-align:center; \\\">\\r\\n        Click on the Category to Expand\\r\\n    </h5>\\r\\n      <h6 style=\\\"text-align:center;\\\">\\r\\n          Select Services From the Items\\r\\n      </h6>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div id=\\\"style-5\\\" style=\\\"overflow-y:auto; height:300px;\\\">\\r\\n\\r\\n<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\r\\n    <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle matTreeNodePadding>\\r\\n      <button mat-icon-button disabled></button>\\r\\n      <mat-checkbox class=\\\"checklist-leaf-node\\\"\\r\\n                    [checked]=\\\"checklistSelection.isSelected(node)\\\"\\r\\n                    (change)=\\\"checklistSelection.toggle(node);\\\">{{node.item}}</mat-checkbox>\\r\\n    </mat-tree-node>\\r\\n  \\r\\n    <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasNoContent\\\" matTreeNodePadding>\\r\\n      <button mat-icon-button disabled></button>\\r\\n      <mat-form-field>\\r\\n        <input matInput #itemValue placeholder=\\\"New item...\\\">\\r\\n      </mat-form-field>\\r\\n      <button mat-button (click)=\\\"saveNode(node, itemValue.value)\\\">Save</button>\\r\\n    </mat-tree-node>\\r\\n  \\r\\n    <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding>\\r\\n      <button mat-icon-button matTreeNodeToggle\\r\\n              [attr.aria-label]=\\\"'toggle ' + node.filename\\\">\\r\\n        <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\r\\n          {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\r\\n        </mat-icon>\\r\\n      </button>\\r\\n      <mat-checkbox [checked]=\\\"descendantsAllSelected(node)\\\"\\r\\n                    [indeterminate]=\\\"descendantsPartiallySelected(node)\\\"\\r\\n                    (change)=\\\"todoItemSelectionToggle(node)\\\">{{node.item}}</mat-checkbox>\\r\\n      <!-- <button mat-icon-button (click)=\\\"addNewItem(node)\\\"><mat-icon>add</mat-icon></button> -->\\r\\n    </mat-tree-node>\\r\\n   \\r\\n  </mat-tree>\\r\\n   \\r\\n</div>\\r\\n<div style=\\\"float:right\\\">\\r\\n    <button mat-icon-button (click)=\\\"onNoClick()\\\"><mat-icon>save</mat-icon></button>\\r\\n</div> \\r\\n \"","module.exports = \"<div style=\\\"background-color:#F5F5F5; width: 100% \\\">\\r\\n  <div ><mat-card class=\\\"example-card\\\">\\r\\n  <mat-card-header>\\r\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n    <mat-card-title><span style=\\\"margin:10px;\\\">  {{user.firstName}} {{user.lastName}}</span></mat-card-title>\\r\\n    <mat-card-subtitle> <span style=\\\"margin:10px;\\\">  {{user.emailAddress}}</span></mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <mat-card-actions>\\r\\n    <mat-tab-group>\\r\\n        <mat-tab label=\\\"User Profile\\\">\\r\\n            <mat-card-content>\\r\\n  \\r\\n            <dproz-prof-profile></dproz-prof-profile>\\r\\n  \\r\\n              </mat-card-content>\\r\\n           </mat-tab>\\r\\n      <mat-tab label=\\\"Basic Info\\\">\\r\\n          <mat-card-content>\\r\\n\\r\\n           <dproz-basic-info>\\r\\n\\r\\n           </dproz-basic-info>\\r\\n\\r\\n            </mat-card-content>\\r\\n         </mat-tab>\\r\\n      <mat-tab label=\\\"Services\\\">   <mat-card-content>\\r\\n          <div style=\\\"float:left; margin: 10px 20px; color: \\t#50B2EC;\\\">\\r\\n              Click the (+) Sign to Add Services\\r\\n              </div>\\r\\n        <div style=\\\"float:right;\\\">\\r\\n          <button mat-icon-button (click)=\\\"openDialog()\\\">\\r\\n            <mat-icon>add</mat-icon></button>\\r\\n          </div>\\r\\n   <div style=\\\"clear: both;\\\">\\r\\n     <mat-accordion>\\r\\n       <div *ngFor=\\\"let category of categoryArray\\\" >\\r\\n          <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\"\\r\\n          (closed)=\\\"panelOpenState = false\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n      {{category.name}}\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n       <!-- {{panelOpenState ? 'open' : 'closed'}} -->\\r\\n      </mat-panel-description>\\r\\n      </mat-expansion-panel-header><ul style=\\\"list-style-type:square\\\">\\r\\n      <div *ngFor=\\\"let service of category.services\\\" style=\\\"clear:both; padding: 0px 0px 10px;\\\">\\r\\n        <li>\\r\\n          <div style=\\\"float:left;\\\">{{service.name}}</div><div style=\\\"float:right;\\\"><button mat-icon-button (click)=\\\"deleteService(service)\\\"> \\r\\n            <mat-icon>delete</mat-icon></button></div></li>\\r\\n      </div></ul>\\r\\n      </mat-expansion-panel>\\r\\n       </div>\\r\\n   \\r\\n</mat-accordion>\\r\\n   </div>\\r\\n      \\r\\n        </mat-card-content> </mat-tab>\\r\\n      <mat-tab label=\\\"Experience\\\">    <mat-card-content>\\r\\n          <dproz-experience>\\r\\n\\r\\n          </dproz-experience>\\r\\n          </mat-card-content> </mat-tab>\\r\\n\\r\\n          <mat-tab label=\\\"Credentials\\\">\\r\\n            <mat-card-content>\\r\\n  \\r\\n              <dproz-credentials>\\r\\n                \\r\\n              </dproz-credentials>\\r\\n\\r\\n           \\r\\n  \\r\\n              </mat-card-content>\\r\\n           </mat-tab>\\r\\n    </mat-tab-group>\\r\\n    <!-- <button >View All</button> -->\\r\\n  </mat-card-actions>\\r\\n  <!-- <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\"> -->\\r\\n\\r\\n \\r\\n</mat-card></div></div>\"","module.exports = \".example-card {\\n  max-width: 1000px;\\n  margin: auto; }\\n\\n@media (max-width: 600px) {\\n  md-card {\\n    min-width: 17rem; } }\\n\\n.example-header-image {\\n  background-image: url('mrisho_profile.png');\\n  background-size: contain; }\\n\"","import { ServicesService } from './../shared/services/services.service';\r\nimport { Inject, Component, OnInit, Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\n\r\nexport class ServiceItemNode {\r\n  children: ServiceItemNode[];\r\n  item: string;\r\n  value: string;\r\n}\r\n\r\n/** Flat to-do item node with expandable and level information */\r\nexport class ServiceItemFlatNode {\r\n  item: string;\r\n  value: string;\r\n  level: number;\r\n  expandable: boolean;\r\n}\r\n\r\n\r\n\r\nexport class Category {\r\n  name: string;\r\n  equals(name:string):boolean{\r\n\r\n   if(this.name = name)\r\n   return true;\r\n\r\n   return false;\r\n  }\r\n  services : IndividualService[] = [];\r\n}\r\n\r\nexport class IndividualService {\r\n  name: string;\r\n  id: string;\r\n}\r\n/**\r\n * The Json object for to-do list data.\r\n */\r\nlet TREE_DATA = {};\r\n\r\n\r\n@Injectable()\r\nexport class ChecklistDatabase {\r\n  dataChange = new BehaviorSubject<ServiceItemNode[]>([]);\r\n\r\n  get data(): ServiceItemNode[] { return this.dataChange.value; }\r\n\r\n  constructor(private services:ServicesService) {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    \r\n      TREE_DATA = JSON.parse(localStorage.getItem(\"service_tree\"));\r\n\r\n      //  console.log(TREE_DATA);\r\n       const data = this.buildFileTree(TREE_DATA, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  \r\n    // Build the tree nodes from Json object. The result is a list of `ServiceItemNode` with nested\r\n    //     file node as children.\r\n   \r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `ServiceItemNode`.\r\n   */\r\n  buildFileTree(obj: object, level: number): ServiceItemNode[] {\r\n    return Object.entries(obj).reduce<ServiceItemNode[]>((accumulator, en) => {\r\n      const value = en[1];\r\n     \r\n      const node = new ServiceItemNode();\r\n      node.item = en[0];\r\n\r\n\r\n      if (value != null && value != 0 ) {\r\n        if (typeof value === 'object') {\r\n          node.children = this.buildFileTree(value, level + 1);\r\n        } else {\r\n          node.item = en[1];\r\n          node.value = en[0];\r\n        }\r\n      }\r\n\r\n      return accumulator.concat(node);\r\n    }, []);\r\n  }\r\n\r\n  \r\n  insertItem(parent: ServiceItemNode, name: string) {\r\n    if (parent.children) {\r\n      parent.children.push({item: name} as ServiceItemNode);\r\n      this.dataChange.next(this.data);\r\n    }\r\n  }\r\n\r\n  updateItem(node: ServiceItemNode, name: string) {\r\n    node.item = name;\r\n    this.dataChange.next(this.data);\r\n  }\r\n}\r\n\r\n/**\r\n * @title Tree with checkboxes\r\n */\r\n\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'dproz-services',\r\n  templateUrl: './services.component.html',\r\n  styleUrls: ['./services.component.scss'],\r\n // providers: [StateService]\r\n \r\n})\r\nexport class ServicesComponent implements OnInit {\r\n\r\n  private categories = {};\r\n  private categoryArray:Category[] = new Array();\r\n  panelOpenState = true;\r\n\r\n\r\n  ngOnInit(): void {\r\n  //  throw new Error(\"Method not implemented.\");\r\n  this.user_ref  = localStorage.getItem(\"user-reference\");\r\n  this.user = JSON.parse(localStorage.getItem(\"user_details\"));\r\n  \r\n//  this.user\r\n  }\r\n\r\n  animal: string;\r\n  name: string;\r\n  user_ref:string;\r\n  user;\r\n\r\n  constructor(public dialog: MatDialog, private services: ServicesService) {\r\n    \r\n    // services.getServiceCategories().subscribe( c =>{\r\n    //      this.categories = c;\r\n    //      console.log(c);\r\n    // });\r\n    \r\n   }\r\n\r\n   deleteService(service){\r\n\r\n    if(confirm(\"Are you sure to delete service \"+service.name)) {\r\n      console.log(\"deleted\");\r\n    }\r\n   }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(EditServiceComponent, {\r\n      //width: '600px',\r\n     \r\n      data: { name: this.name, animal: this.animal }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      let data = JSON.parse(localStorage.getItem(\"all_services\"));\r\n      \r\n      result._selection.forEach(element => {\r\n        let serv = data.filter( v => {\r\n          if(v.serviceId == element.value)\r\n          {\r\n            console.log( element.value);\r\n            console.log(v.serviceId );\r\n          }\r\n        \r\n         return (v.serviceId == element.value)\r\n\r\n        } )[0];\r\n\r\n        console.log( serv);\r\n        let found:boolean = false;\r\n        this.categoryArray.forEach(c => {\r\n             if(c.name == serv.category.categoryName){\r\n              let service = new IndividualService();\r\n              service.name = serv.serviceDescription;\r\n              service.id = serv.serviceId;\r\n              c.services.push(service);\r\n              found = true;\r\n             }\r\n        });\r\n\r\n\r\n        if(!found)\r\n        {\r\n          let newCat = new Category();\r\n          newCat.name = serv.category.categoryName;\r\n          let service = new IndividualService();\r\n          service.name = serv.serviceDescription;\r\n          service.id = serv.serviceId;\r\n          newCat.services.push(service);\r\n          this.categoryArray.push(newCat);\r\n        }\r\n\r\n      });\r\n\r\n      console.log(this.categoryArray);\r\n      console.log(data);\r\n      \r\n      console.log(result._selection);\r\n      this.animal = result;\r\n    });\r\n\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'edit-service',\r\n  templateUrl: './edit-service-dialog.html',\r\n  styleUrls: ['./edit-service-dialog.css'],\r\n  providers: [ChecklistDatabase],\r\n})\r\n\r\nexport class EditServiceComponent {\r\n/** Map from flat node to nested node. This helps us finding the nested node to be modified */\r\nflatNodeMap = new Map<ServiceItemFlatNode, ServiceItemNode>();\r\n\r\n/** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\nnestedNodeMap = new Map<ServiceItemNode, ServiceItemFlatNode>();\r\n\r\n/** A selected parent node to be inserted */\r\nselectedParent: ServiceItemFlatNode | null = null;\r\n\r\n/** The new item's name */\r\nnewItemName = '';\r\n\r\ntreeControl: FlatTreeControl<ServiceItemFlatNode>;\r\n\r\ntreeFlattener: MatTreeFlattener<ServiceItemNode, ServiceItemFlatNode>;\r\n\r\ndataSource: MatTreeFlatDataSource<ServiceItemNode, ServiceItemFlatNode>;\r\n\r\n/** The selection for checklist */\r\nchecklistSelection = new SelectionModel<ServiceItemFlatNode>(true /* multiple */);\r\n// constructor(\r\n//   public dialogRef: MatDialogRef<EditServiceComponent>,\r\n//   @Inject(MAT_DIALOG_DATA) public data: DialogData)\r\n//    {\r\n   \r\n//    }\r\nconstructor( public dialogRef: MatDialogRef<EditServiceComponent>,\r\n  @Inject(MAT_DIALOG_DATA) public data: DialogData, private database: ChecklistDatabase) {\r\n  this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n    this.isExpandable, this.getChildren);\r\n  this.treeControl = new FlatTreeControl<ServiceItemFlatNode>(this.getLevel, this.isExpandable);\r\n  this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n  database.dataChange.subscribe(data => {\r\n    this.dataSource.data = data;\r\n\r\n    console.trace();\r\n  });\r\n}\r\n\r\ngetLevel = (node: ServiceItemFlatNode) => node.level;\r\n\r\nisExpandable = (node: ServiceItemFlatNode) => node.expandable;\r\n\r\ngetChildren = (node: ServiceItemNode): ServiceItemNode[] => node.children;\r\n\r\nhasChild = (_: number, _nodeData: ServiceItemFlatNode) => _nodeData.expandable;\r\n\r\nhasNoContent = (_: number, _nodeData: ServiceItemFlatNode) => _nodeData.item === '';\r\n\r\n/**\r\n * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\r\n */\r\ntransformer = (node: ServiceItemNode, level: number) => {\r\n  const existingNode = this.nestedNodeMap.get(node);\r\n  const flatNode = existingNode && existingNode.item === node.item\r\n      ? existingNode\r\n      : new ServiceItemFlatNode();\r\n  flatNode.item = node.item;\r\n  flatNode.value = node.value;\r\n  flatNode.level = level;\r\n  flatNode.expandable = !!node.children;\r\n  this.flatNodeMap.set(flatNode, node);\r\n  this.nestedNodeMap.set(node, flatNode);\r\n  return flatNode;\r\n}\r\n\r\n/** Whether all the descendants of the node are selected */\r\ndescendantsAllSelected(node: ServiceItemFlatNode): boolean {\r\n  const descendants = this.treeControl.getDescendants(node);\r\n  return descendants.every(child => this.checklistSelection.isSelected(child));\r\n}\r\n\r\n/** Whether part of the descendants are selected */\r\ndescendantsPartiallySelected(node: ServiceItemFlatNode): boolean {\r\n  const descendants = this.treeControl.getDescendants(node);\r\n  const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n  return result && !this.descendantsAllSelected(node);\r\n}\r\n\r\n/** Toggle the to-do item selection. Select/deselect all the descendants node */\r\nServiceItemSelectionToggle(node: ServiceItemFlatNode): void {\r\n  this.checklistSelection.toggle(node);\r\n  const descendants = this.treeControl.getDescendants(node);\r\n  this.checklistSelection.isSelected(node)\r\n    ? this.checklistSelection.select(...descendants)\r\n    : this.checklistSelection.deselect(...descendants);\r\n}\r\n\r\n/** Select the category so we can insert the new item. */\r\naddNewItem(node: ServiceItemFlatNode) {\r\n  const parentNode = this.flatNodeMap.get(node);\r\n  this.database.insertItem(parentNode!, '');\r\n  this.treeControl.expand(node);\r\n}\r\n\r\n/** Save the node to database */\r\nsaveNode(node: ServiceItemFlatNode, itemValue: string) {\r\n  const nestedNode = this.flatNodeMap.get(node);\r\n  this.database.updateItem(nestedNode!, itemValue);\r\n}\r\n \r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close(this.checklistSelection);\r\n  }\r\n\r\n}\r\n","export const DOMAIN = 'http://52.22.128.37';\r\n\r\nexport const SERVICING_PORT = `8080`;\r\nexport const PLACES_PORT = `3000`;\r\n\r\nexport const PLACES_DOMAIN = `${DOMAIN}:${PLACES_PORT}`;\r\nexport const SERVICING_DOMAIN = `${DOMAIN}:${SERVICING_PORT}`;","import { Directive, ElementRef, Renderer2, HostBinding, HostListener, Input, Output, EventEmitter } from '@angular/core';\n\n@Directive({\n  selector: '[dprozResponsiveMenu]'\n})\nexport class ResponsiveMenuDirective {\n\n  @Input() inStatus:boolean\n  @Output() outStatus:EventEmitter<boolean> = new EventEmitter();\n\n  constructor(private e: ElementRef, private r: Renderer2) { \n\n    \n  }\n\n  \n\n  @HostListener(\"click\") click()\n  {\n      if(this.inStatus){\n        this.r.removeClass(this.e.nativeElement, \"responsive\");\n        this.outStatus.emit(false);\n      } else {\n        this.r.addClass(this.e.nativeElement, \"responsive\");\n        this.outStatus.emit(true);\n      }\n     \n\n     \n  }\n\n\n\n}\n","import { Attachment } from './common_data';\r\nimport { PostingIfo } from '../interfaces/domainData';\r\n\r\n\r\nexport class CredentialType\r\n{\r\n      Id : string;\r\n      Name : string;\r\n}\r\n\r\nexport class CredentialClass implements PostingIfo\r\n{\r\n   \r\n    type: string;\r\n    description: string;\r\n    identificationNumber: string;\r\n    issuedBy: string;\r\n    effectiveDate: string;\r\n    expiringDate: string;\r\n    referenceId: string;\r\n    attachment: Attachment;\r\n\r\n    \r\n    getPostingData():any{\r\n\r\n        return {\r\n\r\n                type: this.type,\r\n                description: this.description,\r\n                identificationNumber: this.identificationNumber,\r\n                issuedBy: this.issuedBy,\r\n                effectiveDate: this.effectiveDate,\r\n                expiringDate: this.expiringDate,\r\n                referenceId: this.referenceId\r\n            \r\n        }\r\n    }\r\n}","import { serviceDetails, Attachment, StandardLocation } from \"./common_data\";\r\nimport { PostingIfo } from \"../interfaces/domainData\";\r\n\r\n\r\nexport class Project implements PostingIfo\r\n{\r\n    projectName: string;\r\n    projectDescription: string;\r\n    projectLocation: StandardLocation;\r\n    startDate: string;\r\n    completedDate: string;\r\n    client: ClientDetails;\r\n    consent: Consent;\r\n    offeredServices: string[];\r\n    services: serviceDetails[];\r\n    attachments: Attachment[];\r\n\r\n    getPostingData():any{\r\n\r\n        return {\r\n\r\n            projectName: this.projectName,\r\n            projectDescription: this.projectDescription,\r\n            projectLocation: this.projectLocation,\r\n            startDate: this.startDate,\r\n            completedDate: this.completedDate,\r\n            client: this.client,\r\n            consent: this.consent,\r\n            offeredServices: this.offeredServices,\r\n            services: this.services\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class ClientDetails implements PostingIfo\r\n{\r\n    fistName: string;\r\n    lastName: string;\r\n    phoneNumber: string;\r\n    emailAddress: string;\r\n\r\n    getPostingData(){\r\n\r\n        return {\r\n\r\n            fistName: this.fistName,\r\n            lastName: this.lastName,\r\n            phoneNumber: this.phoneNumber,\r\n            emailAddress: this.emailAddress\r\n        }\r\n    }\r\n}\r\n\r\nexport class Consent implements PostingIfo\r\n{ \r\n    text: string;\r\n    acknowledged: boolean = true;\r\n    signedOn: string;\r\n\r\n    getPostingData()\r\n    {\r\n        return {\r\n            text: this.text,\r\n            acknowledged: this.acknowledged,\r\n            signedOn:  this.signedOn,\r\n        }\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { StateService } from '../services/state.service';\r\n\r\n@Injectable()\r\nexport class LoggedInGuard implements CanActivate {\r\n  constructor(private stateService: StateService) { }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.stateService.user.value.loggedIn;\r\n  }\r\n}\r\n","module.exports = \"\\r\\n<link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\\\">\\r\\n\\r\\n<!-- <div class=\\\"topnav\\\" id=\\\"myTopnav\\\">\\r\\n  <a href=\\\"#home\\\" class=\\\"active\\\">Home</a>\\r\\n  <a href=\\\"#news\\\">News</a>\\r\\n  <a href=\\\"#contact\\\">Contact</a>\\r\\n  <a href=\\\"#about\\\">About</a>\\r\\n  <a href=\\\"javascript:void(0);\\\" class=\\\"icon\\\" onclick=\\\"myFunction()\\\">\\r\\n    <i class=\\\"fa fa-bars\\\"></i>\\r\\n  </a>\\r\\n</div> -->\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"dproz-header\\\">\\r\\n  <div class=\\\"row\\\"> \\r\\n\\r\\n    <div  class=\\\"col-md-10 dproz-logo\\\" >\\r\\n      <img id=\\\"outer-img\\\" routerLink=\\\"dproz/home\\\" src=\\\"./assets/images/Vector Smart Object.png\\\" alt=\\\"logo dproz\\\">\\r\\n    </div>\\r\\n    <div id=\\\"myTopnav\\\" class=\\\"col-md-14 topnav\\\" dprozResponsiveMenu [inStatus] = isMenuOpen (outStatus) = \\\"changeMenu($event)\\\">\\r\\n      <img id=\\\"inner-img\\\"  routerLink=\\\"dproz/home\\\"  src=\\\"./assets/images/Vector Smart Object.png\\\" alt=\\\"logo dproz\\\">\\r\\n      <a routerLink=\\\"dproz/home\\\" routerLinkActive=\\\"active-link\\\">Home</a>\\r\\n      <a routerLink=\\\"dproz/about-us\\\" routerLinkActive=\\\"active-link\\\">About Us</a>\\r\\n      <a routerLink=\\\"dproz/services\\\" routerLinkActive=\\\"active-link\\\">Services</a>\\r\\n      <a routerLink=\\\"dproz/blog\\\" routerLinkActive=\\\"active-link\\\">Blog</a>\\r\\n      <a routerLink=\\\"dproz/contact-us\\\" routerLinkActive=\\\"active-link\\\">Contact Us</a>\\r\\n      \\r\\n      \\r\\n      <!-- <a *ngIf=\\\"userData.loggedIn\\\"  (click)=\\\"logout()\\\">Logout</a> -->\\r\\n      <mat-chip-list class=\\\"dropdown\\\">\\r\\n          <mat-chip color=\\\"primary\\\" *ngIf=\\\"!userData.loggedIn\\\"  routerLink=\\\"dproz/login\\\" >Login</mat-chip>\\r\\n          <mat-chip color=\\\"primary\\\" *ngIf=\\\"!userData.loggedIn\\\" style=\\\"background-color:#50B2EC\\\"  routerLink=\\\"dproz/signup\\\" selected>Signup</mat-chip>\\r\\n      \\r\\n          <mat-chip color=\\\"primary\\\" *ngIf=\\\"userData.loggedIn\\\" routerLink=\\\"dproz/profile\\\">Profile</mat-chip>\\r\\n        <mat-chip color=\\\"warn\\\" style=\\\"background-color:#50B2EC\\\" (click)=\\\"logout()\\\" *ngIf=\\\"userData.loggedIn\\\" selected>Logout</mat-chip>\\r\\n      </mat-chip-list>\\r\\n      \\r\\n      <!-- <div *ngIf=\\\"userData.loggedIn\\\" (click) = \\\"ddClick($event)\\\" class=\\\"dropdown\\\">\\r\\n          <button class=\\\"dropbtn\\\">Options \\r\\n            <i class=\\\"fa fa-caret-down\\\"></i>\\r\\n          </button>\\r\\n          <div class=\\\"dropdown-content\\\">\\r\\n            <a routerLink=\\\"dproz/profile\\\" (click) = \\\"dcClick($event)\\\" class=\\\"button\\\" >Profile</a>\\r\\n            <a (click)=\\\"logout()\\\" class=\\\"button\\\" >Logout</a>\\r\\n          </div>\\r\\n        </div>  -->\\r\\n        <a href=\\\"javascript:void(0);\\\" class=\\\"icon\\\"  >&#9776;</a>\\r\\n      <!-- <a href=\\\"javascript:void(0);\\\" class=\\\"icon\\\" onclick=\\\"myFunction()\\\">\\r\\n          <i class=\\\"fa fa-bars\\\"></i>\\r\\n        </a> -->\\r\\n      <div class=\\\"row dropdown\\\" *ngIf=\\\"false\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <div ngbDropdown class=\\\"d-inline-block\\\">\\r\\n              <button class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>Options</button>\\r\\n              <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\r\\n                <button class=\\\"dropdown-item\\\" routerLink=\\\"dproz/profile\\\">Profile</button>\\r\\n                <button class=\\\"dropdown-item\\\"  (click)=\\\"logout()\\\">Logout</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".dproz-header {\\n  padding: 12px;\\n  width: 90%;\\n  margin: 0px auto; }\\n  .dproz-header .dropdown {\\n    margin-left: 0px; }\\n  .dproz-header .dropdown .btn-outline-primary {\\n      color: black;\\n      font-size: 14px;\\n      font-weight: bold; }\\n  .dproz-header .navigation {\\n    display: flex;\\n    align-items: center; }\\n  .dproz-header .navigation a {\\n      cursor: pointer;\\n      color: #000;\\n      outline: none;\\n      margin-left: 30px;\\n      font-size: .875em;\\n      font-weight: 600;\\n      text-decoration: none; }\\n  .dproz-header .navigation a.active-link {\\n        color: #1ab0f5; }\\n  .dproz-header .navigation .btn {\\n      border-color: transparent;\\n      border-radius: 20px; }\\n  .dproz-logo {\\n  text-align: center; }\\n  .dproz-logo img {\\n    height: 50px; }\\n  .navbar-nav {\\n  flex-direction: row; }\\n  .navigation .icon {\\n  display: none; }\\n  /* Add a black background color to the top navigation */\\n  .topnav {\\n  color: #000; }\\n  /* Style the links inside the navigation bar */\\n  .topnav a {\\n  float: left;\\n  display: block;\\n  color: #000;\\n  text-align: center;\\n  padding: 14px 16px;\\n  text-decoration: none;\\n  font-size: 17px; }\\n  /* Add an active class to highlight the current page */\\n  .active {\\n  color: #1ab0f5; }\\n  /* Hide the link that should open and close the topnav on small screens */\\n  .topnav .icon {\\n  display: none; }\\n  /* Dropdown container - needed to position the dropdown content */\\n  .dropdown {\\n  float: left;\\n  color: #000; }\\n  /* Style the dropdown button to fit inside the topnav */\\n  .dropdown .dropbtn {\\n  font-size: 17px;\\n  border: none;\\n  outline: none;\\n  color: #000;\\n  padding: 14px 16px;\\n  background-color: inherit;\\n  font-family: inherit;\\n  margin: 0; }\\n  /* Style the dropdown content (hidden by default) */\\n  .dropdown-content {\\n  display: none;\\n  position: absolute;\\n  background-color: #ffffff;\\n  min-width: 160px;\\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\n  z-index: 1; }\\n  /* Style the links inside the dropdown */\\n  .dropdown-content a {\\n  float: none;\\n  color: black;\\n  padding: 12px 16px;\\n  text-decoration: none;\\n  display: block;\\n  text-align: left; }\\n  /* Add a dark background on topnav links and the dropdown button on hover */\\n  .topnav a:hover, .dropdown:hover .dropbtn {\\n  color: #1ab0f5; }\\n  #inner-img {\\n  display: none; }\\n  /* Add a grey background to dropdown links on hover */\\n  .dropdown-content a:hover {\\n  color: #1ab0f5; }\\n  #outer-img {\\n  display: inline; }\\n  .topnav mat-chip-list {\\n  margin-top: 10px; }\\n  /* Show the dropdown menu when the user moves the mouse over the dropdown button */\\n  .dropdown:hover .dropdown-content {\\n  display: block; }\\n  /* When the screen is less than 600 pixels wide, hide all links, except for the first one (\\\"Home\\\"). Show the link that contains should open and close the topnav (.icon) */\\n  @media screen and (max-width: 600px) {\\n  .topnav a:not(:first-child), .dropdown .dropbtn {\\n    display: none; }\\n  #inner-img {\\n    display: inline-block;\\n    height: 35px; }\\n  .topnav mat-chip-list {\\n    display: none; }\\n  #outer-img {\\n    display: none; }\\n  .topnav a.icon {\\n    float: right;\\n    display: block; } }\\n  /* The \\\"responsive\\\" class is added to the topnav with JavaScript when the user clicks on the icon. This class makes the topnav look good on small screens (display the links vertically instead of horizontally) */\\n  @media screen and (max-width: 600px) {\\n  .topnav.responsive {\\n    position: relative; }\\n  .topnav.responsive a.icon {\\n    position: absolute;\\n    right: 0;\\n    top: 0; }\\n  .topnav.responsive a {\\n    float: none;\\n    display: block;\\n    text-align: left; }\\n  .topnav.responsive mat-chip-list {\\n    float: none;\\n    display: block;\\n    text-align: left;\\n    margin-top: 0px; }\\n  .topnav.responsive .dropdown {\\n    float: none; }\\n  .topnav.responsive .dropdown-content {\\n    position: relative; }\\n  .topnav.responsive .dropdown .dropbtn {\\n    display: block;\\n    width: 100%;\\n    text-align: left; } }\\n\"","import { Component, OnInit, ViewChild, ElementRef, Renderer2 } from '@angular/core';\r\nimport { StateService } from '../../services/state.service';\r\nimport {NgbDropdownConfig} from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'dproz-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n  providers: [NgbDropdownConfig] \r\n\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @ViewChild('myTopnav') topnav:ElementRef;\r\n\r\n  userData;\r\n  isMenuOpen:boolean;\r\n\r\n  changeMenu(status){\r\n    this.isMenuOpen = status;\r\n  }\r\n  ddClick(event:Event){\r\n\r\n    event.stopImmediatePropagation();\r\n  }\r\n\r\n  dcClick(event:Event){\r\n\r\n    let myTopnav: HTMLElement = document.getElementById('myTopnav') as HTMLElement;\r\n    \r\n    myTopnav.click();\r\n    \r\n  }\r\n\r\n\r\n  constructor(private state: StateService, private router: Router, private r:Renderer2) { }\r\n\r\n  ngOnInit() {    \r\n    this.state.user.subscribe(data => {\r\n      this.userData = data;  \r\n    })\r\n  }\r\n\r\n  logout() {\r\n    this.state.resetState();\r\n    window.localStorage.removeItem('auth-token');\r\n    window.localStorage.removeItem('user-reference');\r\n    this.router.navigate(['../dproz/home']);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { StateService } from '../services/state.service';\r\n\r\n/** Pass untouched request through to the next request handler. */\r\n@Injectable()\r\nexport class AuthTokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private auth: StateService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    const authToken = window.localStorage.getItem('auth-token');\r\n    console.log(authToken, req, '**************************************');\r\n    \r\n\r\n    const authReq = req.clone(\r\n      authToken ? { headers: req.headers.set('Authorization', authToken) } : {});\r\n\r\n    return next.handle(authReq);\r\n  }\r\n}","import { CredentialType } from './../domain/credential';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { CredentialsService } from '../services/credentials.service';\n\n@Pipe({\n  name: 'credentialType'\n})\nexport class CredentialTypePipe implements PipeTransform {\n\n  credentialTypes: CredentialType[];\n\n  constructor(private credentialService: CredentialsService)\n  {\n       this.credentialTypes = credentialService.getCredentiaTypes();\n  }\n\n  transform(value: any, args?: any): any {\n    \n    let newValue = value;\n\n    let filtered = this.credentialTypes.filter( x => x.Id == value);\n\n    if(filtered.length > 0)\n    newValue = filtered[0].Name;\n\n    return newValue;\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { SERVICING_DOMAIN } from '../constants/constants';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  signup(signupInputs) {\r\n    return this.http.post<any>(`${SERVICING_DOMAIN}/api/dproz/users`, signupInputs);\r\n  }\r\n\r\n  verification(token) {\r\n    return this.http.get<void>(`${SERVICING_DOMAIN}/api/dproz/users/verification/${token}`);\r\n  }\r\n\r\n  verifyEmail(token) {\r\n    return this.http.get<any>(`${SERVICING_DOMAIN}/api/dproz/verify-forgot-password/${token}`);\r\n  }\r\n\r\n  resendToken(emailId) {\r\n    const options = { params: new HttpParams().set('emailAddress', emailId) };\r\n    return this.http.get<void>(`${SERVICING_DOMAIN}/api/dproz/users/verification/resend`, options);\r\n  }\r\n\r\n  login(credentials) {\r\n    return this.http.post(`${SERVICING_DOMAIN}/api/dproz/login`, credentials);\r\n  }\r\n\r\n  forgotPassword(emailId) {\r\n    return this.http.post(`${SERVICING_DOMAIN}/api/dproz/forgot-password`, emailId);\r\n  }\r\n\r\n  changePassword(data) {\r\n    return this.http.put(`${SERVICING_DOMAIN}/api/dproz/users/change-password`, data);\r\n  }\r\n\r\n  verifyPassword(data) {\r\n    return this.http.get(`${SERVICING_DOMAIN}/api/verify-forgot-password/${data}`);\r\n  }\r\n\r\n  getUser(userReference) {\r\n    return this.http.get<any>(`${SERVICING_DOMAIN}/api/dproz/users/${userReference}`);\r\n  }\r\n\r\n}\r\n\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SERVICING_DOMAIN } from '../constants/constants';\nimport { StateService } from './state.service';\nimport { CredentialType } from '../domain/credential';\n\nexport class CredentialClass {\n\n\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CredentialsService {\n\n  constructor(private http: HttpClient, private state: StateService) { }\n  \n\n  getCredentiaTypes():CredentialType[]\n  {\n    let credentials:CredentialType[];\n\n    credentials = [\n      {\n        Id : \"CERTIFICATE_CREDENTIAL\", Name : \"Certificate/Diploma/Degree\",\n      },\n      {\n        Id : \"MEMBER_CREDENTIAL\", Name : \"Membership\",\n      },\n      {\n        Id : \"LICENSE_CREDENTIAL\", Name : \"Professional Licence\",\n      },\n      {\n        Id : \"PERMIT_CREDENTIAL \", Name : \"Permit\",\n      },\n\n    ];\n\n    return credentials\n  }\n  \n  getProReferenceId()\n  {\n    let proReferenceId = JSON.parse(this.state.getCurrentUser()).businesses[0];\n    if(proReferenceId != undefined)\n    return proReferenceId;\n    else\n    return \"\";\n  }\n  \n  insertCredential(credentialData) {\n\n    return this.http.put<any>(`${SERVICING_DOMAIN}/api/dproz/pros/${this.getProReferenceId()}/credentials`, credentialData);\n  }\n\n  updateCredential(credentialData) {\n\n    return this.http.put<any>(`${SERVICING_DOMAIN}/api/dproz/pros/${this.getProReferenceId()}/credentials`, credentialData);\n\n  }\n\n  deleteteCredential(credentialReferenceId) {\n\n\n\n    return this.http.delete<any>(`${SERVICING_DOMAIN}/api/dproz/pros/${this.getProReferenceId()}/credentials/${credentialReferenceId}`);\n  }\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpParams, HttpClient } from '@angular/common/http';\r\nimport { SERVICING_DOMAIN } from '../constants/constants';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DocumentService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  postDocument(file, attachmentParentReferenceId, attachmentCategory, attachmentDescription, thumbnail) {\r\n    const options = {\r\n      params: new HttpParams()\r\n        .set('attachmentParentReferenceId', attachmentParentReferenceId)\r\n        .set('attachmentCategory', attachmentCategory)\r\n        .set('attachmentDescription', attachmentDescription)\r\n        .set('thumbnail', thumbnail)\r\n\r\n    };\r\n    const uploadData = new FormData();\r\n    uploadData.append('attachment', file);\r\n    console.log(uploadData);\r\n\r\n    return this.http.post(`${SERVICING_DOMAIN}/api/dproz/documents`, uploadData, options);\r\n  }\r\n\r\n  getDocument(image, userReference) {\r\n    return this.http.get<any>(`${SERVICING_DOMAIN}/api/dproz/documents/${userReference}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PLACES_DOMAIN } from '../constants/constants';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class PlacesService {\r\n\r\n  country = 'Tanzania';\r\n  PLACESAPI = `${PLACES_DOMAIN}/apis/v1/places`\r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getRegions() {\r\n    const options = { params: new HttpParams().set('country', this.country) };\r\n    return this.http.get<any>(this.PLACESAPI, options);\r\n  }\r\n  getCities(region) {\r\n    const options = { params: new HttpParams().set('country', this.country).set('region', region) };\r\n    return this.http.get<any>(this.PLACESAPI, options);\r\n  }\r\n  getCounties(region, city) {\r\n    const options = { params: new HttpParams().set('country', this.country).set('region', region).set('city', city) };\r\n    return this.http.get<any>(this.PLACESAPI, options);\r\n  }\r\n  getStreets(region, city, county) {\r\n    const options = { params: new HttpParams().set('country', this.country).set('region', region).set('city', city).set('county', county) };\r\n    return this.http.get<any>(this.PLACESAPI, options);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SERVICING_DOMAIN } from '../constants/constants';\nimport { StateService } from './state.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n\n  constructor(private http: HttpClient, private state: StateService) { }\n\n\n  getProjects(proReferenceId)\n  {\n\n    // let proReferenceId = JSON.parse(this.state.getCurrentUser()).userReferenceId;\n\n    return this.http.get<any>(`${SERVICING_DOMAIN}/api/dproz/pros/${proReferenceId}/projects`);\n\n    \n  }\n\n  getProject(proReferenceId,projectReferenceId)\n  {\n\n    // let proReferenceId = JSON.parse(this.state.getCurrentUser()).userReferenceId;\n\n    return this.http.get<any>(`${SERVICING_DOMAIN}/api/dproz/pros/${proReferenceId}/projects/${projectReferenceId}`);\n\n    \n  }\n\n  postProject(projectData)\n  {\n\n \n     let proReferenceId = JSON.parse(this.state.getCurrentUser()).userReferenceId;\n\n    return this.http.post<any>(`${SERVICING_DOMAIN}/api/dproz/pros/${proReferenceId}/projects`,projectData );\n\n    \n  }\n\n  putProject(proReferenceId,projectReferenceId, projectData)\n  {\n\n    // let proReferenceId = JSON.parse(this.state.getCurrentUser()).userReferenceId;\n\n    return this.http.get<any>(`${SERVICING_DOMAIN}/api/dproz/pros/${proReferenceId}/projects/${projectReferenceId}`,projectData);\n\n    \n  }\n\n  deleteProject(proReferenceId,projectReferenceId)\n  {\n\n    // let proReferenceId = JSON.parse(this.state.getCurrentUser()).userReferenceId;\n\n    return this.http.get<any>(`${SERVICING_DOMAIN}/api/dproz//pros/${proReferenceId}/projects/${projectReferenceId}\n    `);\n\n    \n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { SERVICING_DOMAIN } from '../constants/constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServicesService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getServiceCategories()\r\n  {\r\n    return this.http.get(`${SERVICING_DOMAIN}/api/dproz/services/categories`);\r\n  }\r\n\r\n  getServices()\r\n  {\r\n    return this.http.get(`${SERVICING_DOMAIN}/api/dproz/services`);\r\n  }\r\n\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//@Injectable()\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class StateService {\r\n\r\n  intialState = {\r\n    loggedIn: false,\r\n    authToken: undefined,\r\n    userReferenceId: undefined,\r\n    identity: {\r\n      emailAddress: undefined,\r\n      address: undefined\r\n    }\r\n  }\r\n\r\n  constructor() { }\r\n  user = new BehaviorSubject(this.intialState);\r\n\r\n  next(data) {\r\n    this.user.next(data);\r\n  }\r\n\r\n  getAuthToken() {\r\n    return window.localStorage.getItem('auth-session');\r\n  }\r\n\r\n  getState() {\r\n    return {...this.user.value, authToken: null};\r\n  }\r\n\r\n  setIdentity(identity) {\r\n    let currentValue = this.user.value;\r\n    currentValue.identity = {...currentValue.identity, ...identity};\r\n   \r\n    this.next(currentValue);    \r\n  }\r\n\r\n  getCurrentUser(){\r\n    return localStorage.getItem(\"user_details\");\r\n  }\r\n  \r\n  setReferenceId(referenceId) {\r\n    let currentValue = this.user.value;\r\n    currentValue.userReferenceId = referenceId;\r\n    this.next(currentValue);    \r\n  }\r\n\r\n  resetState() {\r\n    this.next(this.intialState);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { SERVICING_DOMAIN } from '../constants/constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  updateprofile(referenceId, profile) {\r\n    return this.http.put<any>(`${SERVICING_DOMAIN}/api/dproz/users/${referenceId}`, profile);\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}